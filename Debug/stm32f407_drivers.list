
stm32f407_drivers.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   000001a8  08000000  08000000  00010000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         0000093c  080001a8  080001a8  000101a8  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       00000000  08000ae4  08000aec  00010aec  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  3 .ARM.extab    00000000  08000ae4  08000ae4  00010aec  2**0
                  CONTENTS
  4 .ARM          00000000  08000ae4  08000ae4  00010aec  2**0
                  CONTENTS
  5 .preinit_array 00000000  08000ae4  08000aec  00010aec  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  6 .init_array   00000004  08000ae4  08000ae4  00010ae4  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  7 .fini_array   00000004  08000ae8  08000ae8  00010ae8  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  8 .data         00000000  20000000  20000000  00010aec  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  9 .bss          0000001c  20000000  08000aec  00020000  2**2
                  ALLOC
 10 ._user_heap_stack 00000604  2000001c  08000aec  0002001c  2**0
                  ALLOC
 11 .ARM.attributes 0000002a  00000000  00000000  00010aec  2**0
                  CONTENTS, READONLY
 12 .debug_info   00001189  00000000  00000000  00010b16  2**0
                  CONTENTS, READONLY, DEBUGGING
 13 .debug_abbrev 0000031c  00000000  00000000  00011c9f  2**0
                  CONTENTS, READONLY, DEBUGGING
 14 .debug_aranges 000000c8  00000000  00000000  00011fc0  2**3
                  CONTENTS, READONLY, DEBUGGING
 15 .debug_ranges 000000a0  00000000  00000000  00012088  2**3
                  CONTENTS, READONLY, DEBUGGING
 16 .debug_macro  0000262a  00000000  00000000  00012128  2**0
                  CONTENTS, READONLY, DEBUGGING
 17 .debug_line   00000cb8  00000000  00000000  00014752  2**0
                  CONTENTS, READONLY, DEBUGGING
 18 .debug_str    00009806  00000000  00000000  0001540a  2**0
                  CONTENTS, READONLY, DEBUGGING
 19 .comment      0000007b  00000000  00000000  0001ec10  2**0
                  CONTENTS, READONLY
 20 .debug_frame  00000288  00000000  00000000  0001ec8c  2**2
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

080001a8 <__do_global_dtors_aux>:
 80001a8:	b510      	push	{r4, lr}
 80001aa:	4c05      	ldr	r4, [pc, #20]	; (80001c0 <__do_global_dtors_aux+0x18>)
 80001ac:	7823      	ldrb	r3, [r4, #0]
 80001ae:	b933      	cbnz	r3, 80001be <__do_global_dtors_aux+0x16>
 80001b0:	4b04      	ldr	r3, [pc, #16]	; (80001c4 <__do_global_dtors_aux+0x1c>)
 80001b2:	b113      	cbz	r3, 80001ba <__do_global_dtors_aux+0x12>
 80001b4:	4804      	ldr	r0, [pc, #16]	; (80001c8 <__do_global_dtors_aux+0x20>)
 80001b6:	f3af 8000 	nop.w
 80001ba:	2301      	movs	r3, #1
 80001bc:	7023      	strb	r3, [r4, #0]
 80001be:	bd10      	pop	{r4, pc}
 80001c0:	20000000 	.word	0x20000000
 80001c4:	00000000 	.word	0x00000000
 80001c8:	08000acc 	.word	0x08000acc

080001cc <frame_dummy>:
 80001cc:	b508      	push	{r3, lr}
 80001ce:	4b03      	ldr	r3, [pc, #12]	; (80001dc <frame_dummy+0x10>)
 80001d0:	b11b      	cbz	r3, 80001da <frame_dummy+0xe>
 80001d2:	4903      	ldr	r1, [pc, #12]	; (80001e0 <frame_dummy+0x14>)
 80001d4:	4803      	ldr	r0, [pc, #12]	; (80001e4 <frame_dummy+0x18>)
 80001d6:	f3af 8000 	nop.w
 80001da:	bd08      	pop	{r3, pc}
 80001dc:	00000000 	.word	0x00000000
 80001e0:	20000004 	.word	0x20000004
 80001e4:	08000acc 	.word	0x08000acc

080001e8 <GPIO_PCLKControl>:
 * @param[in]	: base address of the GPIOx peripheral
 * @param[in]	: enable(1) or disable(0)
 *
 * @return		: none
 */
void GPIO_PCLKControl(GPIO_RegDef_t *pGPIOx, uint8_t en_di){
 80001e8:	b480      	push	{r7}
 80001ea:	b083      	sub	sp, #12
 80001ec:	af00      	add	r7, sp, #0
 80001ee:	6078      	str	r0, [r7, #4]
 80001f0:	460b      	mov	r3, r1
 80001f2:	70fb      	strb	r3, [r7, #3]
	if(en_di == ENABLE){
 80001f4:	78fb      	ldrb	r3, [r7, #3]
 80001f6:	2b01      	cmp	r3, #1
 80001f8:	d178      	bne.n	80002ec <GPIO_PCLKControl+0x104>
		if(pGPIOx == GPIOA){
 80001fa:	687b      	ldr	r3, [r7, #4]
 80001fc:	4a7a      	ldr	r2, [pc, #488]	; (80003e8 <GPIO_PCLKControl+0x200>)
 80001fe:	4293      	cmp	r3, r2
 8000200:	d106      	bne.n	8000210 <GPIO_PCLKControl+0x28>
			GPIOA_PCLK_EN();
 8000202:	4b7a      	ldr	r3, [pc, #488]	; (80003ec <GPIO_PCLKControl+0x204>)
 8000204:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8000206:	4a79      	ldr	r2, [pc, #484]	; (80003ec <GPIO_PCLKControl+0x204>)
 8000208:	f043 0301 	orr.w	r3, r3, #1
 800020c:	6313      	str	r3, [r2, #48]	; 0x30
		}else if(pGPIOx == GPIOK){
			GPIOK_PCLK_DI();
		}
	}

}
 800020e:	e0e5      	b.n	80003dc <GPIO_PCLKControl+0x1f4>
		}else if(pGPIOx == GPIOB){
 8000210:	687b      	ldr	r3, [r7, #4]
 8000212:	4a77      	ldr	r2, [pc, #476]	; (80003f0 <GPIO_PCLKControl+0x208>)
 8000214:	4293      	cmp	r3, r2
 8000216:	d106      	bne.n	8000226 <GPIO_PCLKControl+0x3e>
			GPIOB_PCLK_EN();
 8000218:	4b74      	ldr	r3, [pc, #464]	; (80003ec <GPIO_PCLKControl+0x204>)
 800021a:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800021c:	4a73      	ldr	r2, [pc, #460]	; (80003ec <GPIO_PCLKControl+0x204>)
 800021e:	f043 0302 	orr.w	r3, r3, #2
 8000222:	6313      	str	r3, [r2, #48]	; 0x30
}
 8000224:	e0da      	b.n	80003dc <GPIO_PCLKControl+0x1f4>
		}else if(pGPIOx == GPIOC){
 8000226:	687b      	ldr	r3, [r7, #4]
 8000228:	4a72      	ldr	r2, [pc, #456]	; (80003f4 <GPIO_PCLKControl+0x20c>)
 800022a:	4293      	cmp	r3, r2
 800022c:	d106      	bne.n	800023c <GPIO_PCLKControl+0x54>
			GPIOC_PCLK_EN();
 800022e:	4b6f      	ldr	r3, [pc, #444]	; (80003ec <GPIO_PCLKControl+0x204>)
 8000230:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8000232:	4a6e      	ldr	r2, [pc, #440]	; (80003ec <GPIO_PCLKControl+0x204>)
 8000234:	f043 0304 	orr.w	r3, r3, #4
 8000238:	6313      	str	r3, [r2, #48]	; 0x30
}
 800023a:	e0cf      	b.n	80003dc <GPIO_PCLKControl+0x1f4>
		}else if(pGPIOx == GPIOD){
 800023c:	687b      	ldr	r3, [r7, #4]
 800023e:	4a6e      	ldr	r2, [pc, #440]	; (80003f8 <GPIO_PCLKControl+0x210>)
 8000240:	4293      	cmp	r3, r2
 8000242:	d106      	bne.n	8000252 <GPIO_PCLKControl+0x6a>
			GPIOD_PCLK_EN();
 8000244:	4b69      	ldr	r3, [pc, #420]	; (80003ec <GPIO_PCLKControl+0x204>)
 8000246:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8000248:	4a68      	ldr	r2, [pc, #416]	; (80003ec <GPIO_PCLKControl+0x204>)
 800024a:	f043 0308 	orr.w	r3, r3, #8
 800024e:	6313      	str	r3, [r2, #48]	; 0x30
}
 8000250:	e0c4      	b.n	80003dc <GPIO_PCLKControl+0x1f4>
		}else if(pGPIOx == GPIOE){
 8000252:	687b      	ldr	r3, [r7, #4]
 8000254:	4a69      	ldr	r2, [pc, #420]	; (80003fc <GPIO_PCLKControl+0x214>)
 8000256:	4293      	cmp	r3, r2
 8000258:	d106      	bne.n	8000268 <GPIO_PCLKControl+0x80>
			GPIOE_PCLK_EN();
 800025a:	4b64      	ldr	r3, [pc, #400]	; (80003ec <GPIO_PCLKControl+0x204>)
 800025c:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800025e:	4a63      	ldr	r2, [pc, #396]	; (80003ec <GPIO_PCLKControl+0x204>)
 8000260:	f043 0310 	orr.w	r3, r3, #16
 8000264:	6313      	str	r3, [r2, #48]	; 0x30
}
 8000266:	e0b9      	b.n	80003dc <GPIO_PCLKControl+0x1f4>
		}else if(pGPIOx == GPIOF){
 8000268:	687b      	ldr	r3, [r7, #4]
 800026a:	4a65      	ldr	r2, [pc, #404]	; (8000400 <GPIO_PCLKControl+0x218>)
 800026c:	4293      	cmp	r3, r2
 800026e:	d106      	bne.n	800027e <GPIO_PCLKControl+0x96>
			GPIOF_PCLK_EN();
 8000270:	4b5e      	ldr	r3, [pc, #376]	; (80003ec <GPIO_PCLKControl+0x204>)
 8000272:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8000274:	4a5d      	ldr	r2, [pc, #372]	; (80003ec <GPIO_PCLKControl+0x204>)
 8000276:	f043 0320 	orr.w	r3, r3, #32
 800027a:	6313      	str	r3, [r2, #48]	; 0x30
}
 800027c:	e0ae      	b.n	80003dc <GPIO_PCLKControl+0x1f4>
		}else if(pGPIOx == GPIOG){
 800027e:	687b      	ldr	r3, [r7, #4]
 8000280:	4a60      	ldr	r2, [pc, #384]	; (8000404 <GPIO_PCLKControl+0x21c>)
 8000282:	4293      	cmp	r3, r2
 8000284:	d106      	bne.n	8000294 <GPIO_PCLKControl+0xac>
			GPIOG_PCLK_EN();
 8000286:	4b59      	ldr	r3, [pc, #356]	; (80003ec <GPIO_PCLKControl+0x204>)
 8000288:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800028a:	4a58      	ldr	r2, [pc, #352]	; (80003ec <GPIO_PCLKControl+0x204>)
 800028c:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 8000290:	6313      	str	r3, [r2, #48]	; 0x30
}
 8000292:	e0a3      	b.n	80003dc <GPIO_PCLKControl+0x1f4>
		}else if(pGPIOx == GPIOH){
 8000294:	687b      	ldr	r3, [r7, #4]
 8000296:	4a5c      	ldr	r2, [pc, #368]	; (8000408 <GPIO_PCLKControl+0x220>)
 8000298:	4293      	cmp	r3, r2
 800029a:	d106      	bne.n	80002aa <GPIO_PCLKControl+0xc2>
			GPIOH_PCLK_EN();
 800029c:	4b53      	ldr	r3, [pc, #332]	; (80003ec <GPIO_PCLKControl+0x204>)
 800029e:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80002a0:	4a52      	ldr	r2, [pc, #328]	; (80003ec <GPIO_PCLKControl+0x204>)
 80002a2:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 80002a6:	6313      	str	r3, [r2, #48]	; 0x30
}
 80002a8:	e098      	b.n	80003dc <GPIO_PCLKControl+0x1f4>
		}else if(pGPIOx == GPIOI){
 80002aa:	687b      	ldr	r3, [r7, #4]
 80002ac:	4a57      	ldr	r2, [pc, #348]	; (800040c <GPIO_PCLKControl+0x224>)
 80002ae:	4293      	cmp	r3, r2
 80002b0:	d106      	bne.n	80002c0 <GPIO_PCLKControl+0xd8>
			GPIOI_PCLK_EN();
 80002b2:	4b4e      	ldr	r3, [pc, #312]	; (80003ec <GPIO_PCLKControl+0x204>)
 80002b4:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80002b6:	4a4d      	ldr	r2, [pc, #308]	; (80003ec <GPIO_PCLKControl+0x204>)
 80002b8:	f443 7380 	orr.w	r3, r3, #256	; 0x100
 80002bc:	6313      	str	r3, [r2, #48]	; 0x30
}
 80002be:	e08d      	b.n	80003dc <GPIO_PCLKControl+0x1f4>
		}else if(pGPIOx == GPIOJ){
 80002c0:	687b      	ldr	r3, [r7, #4]
 80002c2:	4a53      	ldr	r2, [pc, #332]	; (8000410 <GPIO_PCLKControl+0x228>)
 80002c4:	4293      	cmp	r3, r2
 80002c6:	d106      	bne.n	80002d6 <GPIO_PCLKControl+0xee>
			GPIOJ_PCLK_EN();
 80002c8:	4b48      	ldr	r3, [pc, #288]	; (80003ec <GPIO_PCLKControl+0x204>)
 80002ca:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80002cc:	4a47      	ldr	r2, [pc, #284]	; (80003ec <GPIO_PCLKControl+0x204>)
 80002ce:	f443 7300 	orr.w	r3, r3, #512	; 0x200
 80002d2:	6313      	str	r3, [r2, #48]	; 0x30
}
 80002d4:	e082      	b.n	80003dc <GPIO_PCLKControl+0x1f4>
		}else if(pGPIOx == GPIOK){
 80002d6:	687b      	ldr	r3, [r7, #4]
 80002d8:	4a4e      	ldr	r2, [pc, #312]	; (8000414 <GPIO_PCLKControl+0x22c>)
 80002da:	4293      	cmp	r3, r2
 80002dc:	d17e      	bne.n	80003dc <GPIO_PCLKControl+0x1f4>
			GPIOK_PCLK_EN();
 80002de:	4b43      	ldr	r3, [pc, #268]	; (80003ec <GPIO_PCLKControl+0x204>)
 80002e0:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80002e2:	4a42      	ldr	r2, [pc, #264]	; (80003ec <GPIO_PCLKControl+0x204>)
 80002e4:	f443 6380 	orr.w	r3, r3, #1024	; 0x400
 80002e8:	6313      	str	r3, [r2, #48]	; 0x30
}
 80002ea:	e077      	b.n	80003dc <GPIO_PCLKControl+0x1f4>
		if(pGPIOx == GPIOA){
 80002ec:	687b      	ldr	r3, [r7, #4]
 80002ee:	4a3e      	ldr	r2, [pc, #248]	; (80003e8 <GPIO_PCLKControl+0x200>)
 80002f0:	4293      	cmp	r3, r2
 80002f2:	d106      	bne.n	8000302 <GPIO_PCLKControl+0x11a>
			GPIOA_PCLK_DI();
 80002f4:	4b3d      	ldr	r3, [pc, #244]	; (80003ec <GPIO_PCLKControl+0x204>)
 80002f6:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80002f8:	4a3c      	ldr	r2, [pc, #240]	; (80003ec <GPIO_PCLKControl+0x204>)
 80002fa:	f023 0301 	bic.w	r3, r3, #1
 80002fe:	6313      	str	r3, [r2, #48]	; 0x30
}
 8000300:	e06c      	b.n	80003dc <GPIO_PCLKControl+0x1f4>
		}else if(pGPIOx == GPIOB){
 8000302:	687b      	ldr	r3, [r7, #4]
 8000304:	4a3a      	ldr	r2, [pc, #232]	; (80003f0 <GPIO_PCLKControl+0x208>)
 8000306:	4293      	cmp	r3, r2
 8000308:	d106      	bne.n	8000318 <GPIO_PCLKControl+0x130>
			GPIOB_PCLK_DI();
 800030a:	4b38      	ldr	r3, [pc, #224]	; (80003ec <GPIO_PCLKControl+0x204>)
 800030c:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800030e:	4a37      	ldr	r2, [pc, #220]	; (80003ec <GPIO_PCLKControl+0x204>)
 8000310:	f023 0302 	bic.w	r3, r3, #2
 8000314:	6313      	str	r3, [r2, #48]	; 0x30
}
 8000316:	e061      	b.n	80003dc <GPIO_PCLKControl+0x1f4>
		}else if(pGPIOx == GPIOC){
 8000318:	687b      	ldr	r3, [r7, #4]
 800031a:	4a36      	ldr	r2, [pc, #216]	; (80003f4 <GPIO_PCLKControl+0x20c>)
 800031c:	4293      	cmp	r3, r2
 800031e:	d106      	bne.n	800032e <GPIO_PCLKControl+0x146>
			GPIOC_PCLK_DI();
 8000320:	4b32      	ldr	r3, [pc, #200]	; (80003ec <GPIO_PCLKControl+0x204>)
 8000322:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8000324:	4a31      	ldr	r2, [pc, #196]	; (80003ec <GPIO_PCLKControl+0x204>)
 8000326:	f023 0304 	bic.w	r3, r3, #4
 800032a:	6313      	str	r3, [r2, #48]	; 0x30
}
 800032c:	e056      	b.n	80003dc <GPIO_PCLKControl+0x1f4>
		}else if(pGPIOx == GPIOD){
 800032e:	687b      	ldr	r3, [r7, #4]
 8000330:	4a31      	ldr	r2, [pc, #196]	; (80003f8 <GPIO_PCLKControl+0x210>)
 8000332:	4293      	cmp	r3, r2
 8000334:	d106      	bne.n	8000344 <GPIO_PCLKControl+0x15c>
			GPIOD_PCLK_DI();
 8000336:	4b2d      	ldr	r3, [pc, #180]	; (80003ec <GPIO_PCLKControl+0x204>)
 8000338:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800033a:	4a2c      	ldr	r2, [pc, #176]	; (80003ec <GPIO_PCLKControl+0x204>)
 800033c:	f023 0308 	bic.w	r3, r3, #8
 8000340:	6313      	str	r3, [r2, #48]	; 0x30
}
 8000342:	e04b      	b.n	80003dc <GPIO_PCLKControl+0x1f4>
		}else if(pGPIOx == GPIOE){
 8000344:	687b      	ldr	r3, [r7, #4]
 8000346:	4a2d      	ldr	r2, [pc, #180]	; (80003fc <GPIO_PCLKControl+0x214>)
 8000348:	4293      	cmp	r3, r2
 800034a:	d106      	bne.n	800035a <GPIO_PCLKControl+0x172>
			GPIOE_PCLK_DI();
 800034c:	4b27      	ldr	r3, [pc, #156]	; (80003ec <GPIO_PCLKControl+0x204>)
 800034e:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8000350:	4a26      	ldr	r2, [pc, #152]	; (80003ec <GPIO_PCLKControl+0x204>)
 8000352:	f023 0310 	bic.w	r3, r3, #16
 8000356:	6313      	str	r3, [r2, #48]	; 0x30
}
 8000358:	e040      	b.n	80003dc <GPIO_PCLKControl+0x1f4>
		}else if(pGPIOx == GPIOF){
 800035a:	687b      	ldr	r3, [r7, #4]
 800035c:	4a28      	ldr	r2, [pc, #160]	; (8000400 <GPIO_PCLKControl+0x218>)
 800035e:	4293      	cmp	r3, r2
 8000360:	d106      	bne.n	8000370 <GPIO_PCLKControl+0x188>
			GPIOF_PCLK_DI();
 8000362:	4b22      	ldr	r3, [pc, #136]	; (80003ec <GPIO_PCLKControl+0x204>)
 8000364:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8000366:	4a21      	ldr	r2, [pc, #132]	; (80003ec <GPIO_PCLKControl+0x204>)
 8000368:	f023 0320 	bic.w	r3, r3, #32
 800036c:	6313      	str	r3, [r2, #48]	; 0x30
}
 800036e:	e035      	b.n	80003dc <GPIO_PCLKControl+0x1f4>
		}else if(pGPIOx == GPIOG){
 8000370:	687b      	ldr	r3, [r7, #4]
 8000372:	4a24      	ldr	r2, [pc, #144]	; (8000404 <GPIO_PCLKControl+0x21c>)
 8000374:	4293      	cmp	r3, r2
 8000376:	d106      	bne.n	8000386 <GPIO_PCLKControl+0x19e>
			GPIOG_PCLK_DI();
 8000378:	4b1c      	ldr	r3, [pc, #112]	; (80003ec <GPIO_PCLKControl+0x204>)
 800037a:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800037c:	4a1b      	ldr	r2, [pc, #108]	; (80003ec <GPIO_PCLKControl+0x204>)
 800037e:	f023 0340 	bic.w	r3, r3, #64	; 0x40
 8000382:	6313      	str	r3, [r2, #48]	; 0x30
}
 8000384:	e02a      	b.n	80003dc <GPIO_PCLKControl+0x1f4>
		}else if(pGPIOx == GPIOH){
 8000386:	687b      	ldr	r3, [r7, #4]
 8000388:	4a1f      	ldr	r2, [pc, #124]	; (8000408 <GPIO_PCLKControl+0x220>)
 800038a:	4293      	cmp	r3, r2
 800038c:	d106      	bne.n	800039c <GPIO_PCLKControl+0x1b4>
			GPIOH_PCLK_DI();
 800038e:	4b17      	ldr	r3, [pc, #92]	; (80003ec <GPIO_PCLKControl+0x204>)
 8000390:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8000392:	4a16      	ldr	r2, [pc, #88]	; (80003ec <GPIO_PCLKControl+0x204>)
 8000394:	f023 0380 	bic.w	r3, r3, #128	; 0x80
 8000398:	6313      	str	r3, [r2, #48]	; 0x30
}
 800039a:	e01f      	b.n	80003dc <GPIO_PCLKControl+0x1f4>
		}else if(pGPIOx == GPIOI){
 800039c:	687b      	ldr	r3, [r7, #4]
 800039e:	4a1b      	ldr	r2, [pc, #108]	; (800040c <GPIO_PCLKControl+0x224>)
 80003a0:	4293      	cmp	r3, r2
 80003a2:	d106      	bne.n	80003b2 <GPIO_PCLKControl+0x1ca>
			GPIOI_PCLK_DI();
 80003a4:	4b11      	ldr	r3, [pc, #68]	; (80003ec <GPIO_PCLKControl+0x204>)
 80003a6:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80003a8:	4a10      	ldr	r2, [pc, #64]	; (80003ec <GPIO_PCLKControl+0x204>)
 80003aa:	f423 7380 	bic.w	r3, r3, #256	; 0x100
 80003ae:	6313      	str	r3, [r2, #48]	; 0x30
}
 80003b0:	e014      	b.n	80003dc <GPIO_PCLKControl+0x1f4>
		}else if(pGPIOx == GPIOJ){
 80003b2:	687b      	ldr	r3, [r7, #4]
 80003b4:	4a16      	ldr	r2, [pc, #88]	; (8000410 <GPIO_PCLKControl+0x228>)
 80003b6:	4293      	cmp	r3, r2
 80003b8:	d106      	bne.n	80003c8 <GPIO_PCLKControl+0x1e0>
			GPIOJ_PCLK_DI();
 80003ba:	4b0c      	ldr	r3, [pc, #48]	; (80003ec <GPIO_PCLKControl+0x204>)
 80003bc:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80003be:	4a0b      	ldr	r2, [pc, #44]	; (80003ec <GPIO_PCLKControl+0x204>)
 80003c0:	f423 7300 	bic.w	r3, r3, #512	; 0x200
 80003c4:	6313      	str	r3, [r2, #48]	; 0x30
}
 80003c6:	e009      	b.n	80003dc <GPIO_PCLKControl+0x1f4>
		}else if(pGPIOx == GPIOK){
 80003c8:	687b      	ldr	r3, [r7, #4]
 80003ca:	4a12      	ldr	r2, [pc, #72]	; (8000414 <GPIO_PCLKControl+0x22c>)
 80003cc:	4293      	cmp	r3, r2
 80003ce:	d105      	bne.n	80003dc <GPIO_PCLKControl+0x1f4>
			GPIOK_PCLK_DI();
 80003d0:	4b06      	ldr	r3, [pc, #24]	; (80003ec <GPIO_PCLKControl+0x204>)
 80003d2:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80003d4:	4a05      	ldr	r2, [pc, #20]	; (80003ec <GPIO_PCLKControl+0x204>)
 80003d6:	f423 6380 	bic.w	r3, r3, #1024	; 0x400
 80003da:	6313      	str	r3, [r2, #48]	; 0x30
}
 80003dc:	bf00      	nop
 80003de:	370c      	adds	r7, #12
 80003e0:	46bd      	mov	sp, r7
 80003e2:	bc80      	pop	{r7}
 80003e4:	4770      	bx	lr
 80003e6:	bf00      	nop
 80003e8:	40020000 	.word	0x40020000
 80003ec:	40023800 	.word	0x40023800
 80003f0:	40020400 	.word	0x40020400
 80003f4:	40020800 	.word	0x40020800
 80003f8:	40020c00 	.word	0x40020c00
 80003fc:	40021000 	.word	0x40021000
 8000400:	40021400 	.word	0x40021400
 8000404:	40021800 	.word	0x40021800
 8000408:	40021c00 	.word	0x40021c00
 800040c:	40022000 	.word	0x40022000
 8000410:	40022400 	.word	0x40022400
 8000414:	40022800 	.word	0x40022800

08000418 <GPIO_Init>:
 *
 * @param[in]	: pointer to the user create handle structure
 *
 * @return		: none
 */
void GPIO_Init(GPIO_Handle_t *pGPIOHandle){
 8000418:	b480      	push	{r7}
 800041a:	b087      	sub	sp, #28
 800041c:	af00      	add	r7, sp, #0
 800041e:	6078      	str	r0, [r7, #4]

	/* temporary storage*/
	uint32_t temp = 0;
 8000420:	2300      	movs	r3, #0
 8000422:	617b      	str	r3, [r7, #20]

	/*initialize mode register*/
	if(pGPIOHandle->GPIO_PinConfig.GPIO_PinMode <= GPIO_MODE_ANALOG){
 8000424:	687b      	ldr	r3, [r7, #4]
 8000426:	795b      	ldrb	r3, [r3, #5]
 8000428:	2b03      	cmp	r3, #3
 800042a:	d821      	bhi.n	8000470 <GPIO_Init+0x58>
		temp = (pGPIOHandle->GPIO_PinConfig.GPIO_PinMode << (2 * pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber));
 800042c:	687b      	ldr	r3, [r7, #4]
 800042e:	795b      	ldrb	r3, [r3, #5]
 8000430:	461a      	mov	r2, r3
 8000432:	687b      	ldr	r3, [r7, #4]
 8000434:	791b      	ldrb	r3, [r3, #4]
 8000436:	005b      	lsls	r3, r3, #1
 8000438:	fa02 f303 	lsl.w	r3, r2, r3
 800043c:	617b      	str	r3, [r7, #20]
		pGPIOHandle->pGPIOx->MODER &= ~(0x3 << pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber);						//clearing
 800043e:	687b      	ldr	r3, [r7, #4]
 8000440:	681b      	ldr	r3, [r3, #0]
 8000442:	681a      	ldr	r2, [r3, #0]
 8000444:	687b      	ldr	r3, [r7, #4]
 8000446:	791b      	ldrb	r3, [r3, #4]
 8000448:	4619      	mov	r1, r3
 800044a:	2303      	movs	r3, #3
 800044c:	408b      	lsls	r3, r1
 800044e:	43db      	mvns	r3, r3
 8000450:	4619      	mov	r1, r3
 8000452:	687b      	ldr	r3, [r7, #4]
 8000454:	681b      	ldr	r3, [r3, #0]
 8000456:	400a      	ands	r2, r1
 8000458:	601a      	str	r2, [r3, #0]
		pGPIOHandle->pGPIOx->MODER |= temp;
 800045a:	687b      	ldr	r3, [r7, #4]
 800045c:	681b      	ldr	r3, [r3, #0]
 800045e:	6819      	ldr	r1, [r3, #0]
 8000460:	687b      	ldr	r3, [r7, #4]
 8000462:	681b      	ldr	r3, [r3, #0]
 8000464:	697a      	ldr	r2, [r7, #20]
 8000466:	430a      	orrs	r2, r1
 8000468:	601a      	str	r2, [r3, #0]
		temp = 0;
 800046a:	2300      	movs	r3, #0
 800046c:	617b      	str	r3, [r7, #20]
 800046e:	e0dc      	b.n	800062a <GPIO_Init+0x212>

	}else{
		// interrupt modes
		if(pGPIOHandle->GPIO_PinConfig.GPIO_PinMode == GPIO_MODE_IT_FL){
 8000470:	687b      	ldr	r3, [r7, #4]
 8000472:	795b      	ldrb	r3, [r3, #5]
 8000474:	2b04      	cmp	r3, #4
 8000476:	d117      	bne.n	80004a8 <GPIO_Init+0x90>
			// configure the falling trigger selection register
			EXTI->EXTI_FTSR |= (1 << pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber);
 8000478:	4b51      	ldr	r3, [pc, #324]	; (80005c0 <GPIO_Init+0x1a8>)
 800047a:	68db      	ldr	r3, [r3, #12]
 800047c:	687a      	ldr	r2, [r7, #4]
 800047e:	7912      	ldrb	r2, [r2, #4]
 8000480:	4611      	mov	r1, r2
 8000482:	2201      	movs	r2, #1
 8000484:	408a      	lsls	r2, r1
 8000486:	4611      	mov	r1, r2
 8000488:	4a4d      	ldr	r2, [pc, #308]	; (80005c0 <GPIO_Init+0x1a8>)
 800048a:	430b      	orrs	r3, r1
 800048c:	60d3      	str	r3, [r2, #12]
			// clear RTSR BIT because it might be set
			EXTI->EXTI_RTSR &= ~(1 << pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber);
 800048e:	4b4c      	ldr	r3, [pc, #304]	; (80005c0 <GPIO_Init+0x1a8>)
 8000490:	689b      	ldr	r3, [r3, #8]
 8000492:	687a      	ldr	r2, [r7, #4]
 8000494:	7912      	ldrb	r2, [r2, #4]
 8000496:	4611      	mov	r1, r2
 8000498:	2201      	movs	r2, #1
 800049a:	408a      	lsls	r2, r1
 800049c:	43d2      	mvns	r2, r2
 800049e:	4611      	mov	r1, r2
 80004a0:	4a47      	ldr	r2, [pc, #284]	; (80005c0 <GPIO_Init+0x1a8>)
 80004a2:	400b      	ands	r3, r1
 80004a4:	6093      	str	r3, [r2, #8]
 80004a6:	e035      	b.n	8000514 <GPIO_Init+0xfc>

		}else if(pGPIOHandle->GPIO_PinConfig.GPIO_PinMode == GPIO_MODE_IT_RI){
 80004a8:	687b      	ldr	r3, [r7, #4]
 80004aa:	795b      	ldrb	r3, [r3, #5]
 80004ac:	2b05      	cmp	r3, #5
 80004ae:	d117      	bne.n	80004e0 <GPIO_Init+0xc8>
			// configure the rising trigger selection register
			EXTI->EXTI_RTSR |= (1 << pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber);
 80004b0:	4b43      	ldr	r3, [pc, #268]	; (80005c0 <GPIO_Init+0x1a8>)
 80004b2:	689b      	ldr	r3, [r3, #8]
 80004b4:	687a      	ldr	r2, [r7, #4]
 80004b6:	7912      	ldrb	r2, [r2, #4]
 80004b8:	4611      	mov	r1, r2
 80004ba:	2201      	movs	r2, #1
 80004bc:	408a      	lsls	r2, r1
 80004be:	4611      	mov	r1, r2
 80004c0:	4a3f      	ldr	r2, [pc, #252]	; (80005c0 <GPIO_Init+0x1a8>)
 80004c2:	430b      	orrs	r3, r1
 80004c4:	6093      	str	r3, [r2, #8]
			// clear FTSR BIT because it might be set
			EXTI->EXTI_FTSR &= ~(1 << pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber);
 80004c6:	4b3e      	ldr	r3, [pc, #248]	; (80005c0 <GPIO_Init+0x1a8>)
 80004c8:	68db      	ldr	r3, [r3, #12]
 80004ca:	687a      	ldr	r2, [r7, #4]
 80004cc:	7912      	ldrb	r2, [r2, #4]
 80004ce:	4611      	mov	r1, r2
 80004d0:	2201      	movs	r2, #1
 80004d2:	408a      	lsls	r2, r1
 80004d4:	43d2      	mvns	r2, r2
 80004d6:	4611      	mov	r1, r2
 80004d8:	4a39      	ldr	r2, [pc, #228]	; (80005c0 <GPIO_Init+0x1a8>)
 80004da:	400b      	ands	r3, r1
 80004dc:	60d3      	str	r3, [r2, #12]
 80004de:	e019      	b.n	8000514 <GPIO_Init+0xfc>

		}else if(pGPIOHandle->GPIO_PinConfig.GPIO_PinMode == GPIO_MODE_IT_RI_FL){
 80004e0:	687b      	ldr	r3, [r7, #4]
 80004e2:	795b      	ldrb	r3, [r3, #5]
 80004e4:	2b06      	cmp	r3, #6
 80004e6:	d115      	bne.n	8000514 <GPIO_Init+0xfc>
			// configure both the falling and rising trigger selection registers
			EXTI->EXTI_FTSR |= (1 << pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber);
 80004e8:	4b35      	ldr	r3, [pc, #212]	; (80005c0 <GPIO_Init+0x1a8>)
 80004ea:	68db      	ldr	r3, [r3, #12]
 80004ec:	687a      	ldr	r2, [r7, #4]
 80004ee:	7912      	ldrb	r2, [r2, #4]
 80004f0:	4611      	mov	r1, r2
 80004f2:	2201      	movs	r2, #1
 80004f4:	408a      	lsls	r2, r1
 80004f6:	4611      	mov	r1, r2
 80004f8:	4a31      	ldr	r2, [pc, #196]	; (80005c0 <GPIO_Init+0x1a8>)
 80004fa:	430b      	orrs	r3, r1
 80004fc:	60d3      	str	r3, [r2, #12]
			EXTI->EXTI_RTSR |= (1 << pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber);
 80004fe:	4b30      	ldr	r3, [pc, #192]	; (80005c0 <GPIO_Init+0x1a8>)
 8000500:	689b      	ldr	r3, [r3, #8]
 8000502:	687a      	ldr	r2, [r7, #4]
 8000504:	7912      	ldrb	r2, [r2, #4]
 8000506:	4611      	mov	r1, r2
 8000508:	2201      	movs	r2, #1
 800050a:	408a      	lsls	r2, r1
 800050c:	4611      	mov	r1, r2
 800050e:	4a2c      	ldr	r2, [pc, #176]	; (80005c0 <GPIO_Init+0x1a8>)
 8000510:	430b      	orrs	r3, r1
 8000512:	6093      	str	r3, [r2, #8]
		}

		// configure the GPIO port selection in SYSCFG_EXTICR
		uint8_t temp1 = pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber / 4;
 8000514:	687b      	ldr	r3, [r7, #4]
 8000516:	791b      	ldrb	r3, [r3, #4]
 8000518:	089b      	lsrs	r3, r3, #2
 800051a:	74fb      	strb	r3, [r7, #19]
		uint8_t temp2 = pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber % 4;
 800051c:	687b      	ldr	r3, [r7, #4]
 800051e:	791b      	ldrb	r3, [r3, #4]
 8000520:	f003 0303 	and.w	r3, r3, #3
 8000524:	74bb      	strb	r3, [r7, #18]
		uint8_t portcode = GPIO_BASE_TO_CODE(pGPIOHandle->pGPIOx);
 8000526:	687b      	ldr	r3, [r7, #4]
 8000528:	681b      	ldr	r3, [r3, #0]
 800052a:	4a26      	ldr	r2, [pc, #152]	; (80005c4 <GPIO_Init+0x1ac>)
 800052c:	4293      	cmp	r3, r2
 800052e:	d05f      	beq.n	80005f0 <GPIO_Init+0x1d8>
 8000530:	687b      	ldr	r3, [r7, #4]
 8000532:	681b      	ldr	r3, [r3, #0]
 8000534:	4a24      	ldr	r2, [pc, #144]	; (80005c8 <GPIO_Init+0x1b0>)
 8000536:	4293      	cmp	r3, r2
 8000538:	d040      	beq.n	80005bc <GPIO_Init+0x1a4>
 800053a:	687b      	ldr	r3, [r7, #4]
 800053c:	681b      	ldr	r3, [r3, #0]
 800053e:	4a23      	ldr	r2, [pc, #140]	; (80005cc <GPIO_Init+0x1b4>)
 8000540:	4293      	cmp	r3, r2
 8000542:	d039      	beq.n	80005b8 <GPIO_Init+0x1a0>
 8000544:	687b      	ldr	r3, [r7, #4]
 8000546:	681b      	ldr	r3, [r3, #0]
 8000548:	4a21      	ldr	r2, [pc, #132]	; (80005d0 <GPIO_Init+0x1b8>)
 800054a:	4293      	cmp	r3, r2
 800054c:	d032      	beq.n	80005b4 <GPIO_Init+0x19c>
 800054e:	687b      	ldr	r3, [r7, #4]
 8000550:	681b      	ldr	r3, [r3, #0]
 8000552:	4a20      	ldr	r2, [pc, #128]	; (80005d4 <GPIO_Init+0x1bc>)
 8000554:	4293      	cmp	r3, r2
 8000556:	d02b      	beq.n	80005b0 <GPIO_Init+0x198>
 8000558:	687b      	ldr	r3, [r7, #4]
 800055a:	681b      	ldr	r3, [r3, #0]
 800055c:	4a1e      	ldr	r2, [pc, #120]	; (80005d8 <GPIO_Init+0x1c0>)
 800055e:	4293      	cmp	r3, r2
 8000560:	d024      	beq.n	80005ac <GPIO_Init+0x194>
 8000562:	687b      	ldr	r3, [r7, #4]
 8000564:	681b      	ldr	r3, [r3, #0]
 8000566:	4a1d      	ldr	r2, [pc, #116]	; (80005dc <GPIO_Init+0x1c4>)
 8000568:	4293      	cmp	r3, r2
 800056a:	d01d      	beq.n	80005a8 <GPIO_Init+0x190>
 800056c:	687b      	ldr	r3, [r7, #4]
 800056e:	681b      	ldr	r3, [r3, #0]
 8000570:	4a1b      	ldr	r2, [pc, #108]	; (80005e0 <GPIO_Init+0x1c8>)
 8000572:	4293      	cmp	r3, r2
 8000574:	d016      	beq.n	80005a4 <GPIO_Init+0x18c>
 8000576:	687b      	ldr	r3, [r7, #4]
 8000578:	681b      	ldr	r3, [r3, #0]
 800057a:	4a1a      	ldr	r2, [pc, #104]	; (80005e4 <GPIO_Init+0x1cc>)
 800057c:	4293      	cmp	r3, r2
 800057e:	d00f      	beq.n	80005a0 <GPIO_Init+0x188>
 8000580:	687b      	ldr	r3, [r7, #4]
 8000582:	681b      	ldr	r3, [r3, #0]
 8000584:	4a18      	ldr	r2, [pc, #96]	; (80005e8 <GPIO_Init+0x1d0>)
 8000586:	4293      	cmp	r3, r2
 8000588:	d008      	beq.n	800059c <GPIO_Init+0x184>
 800058a:	687b      	ldr	r3, [r7, #4]
 800058c:	681b      	ldr	r3, [r3, #0]
 800058e:	4a17      	ldr	r2, [pc, #92]	; (80005ec <GPIO_Init+0x1d4>)
 8000590:	4293      	cmp	r3, r2
 8000592:	d101      	bne.n	8000598 <GPIO_Init+0x180>
 8000594:	230a      	movs	r3, #10
 8000596:	e02c      	b.n	80005f2 <GPIO_Init+0x1da>
 8000598:	2300      	movs	r3, #0
 800059a:	e02a      	b.n	80005f2 <GPIO_Init+0x1da>
 800059c:	2309      	movs	r3, #9
 800059e:	e028      	b.n	80005f2 <GPIO_Init+0x1da>
 80005a0:	2308      	movs	r3, #8
 80005a2:	e026      	b.n	80005f2 <GPIO_Init+0x1da>
 80005a4:	2307      	movs	r3, #7
 80005a6:	e024      	b.n	80005f2 <GPIO_Init+0x1da>
 80005a8:	2306      	movs	r3, #6
 80005aa:	e022      	b.n	80005f2 <GPIO_Init+0x1da>
 80005ac:	2305      	movs	r3, #5
 80005ae:	e020      	b.n	80005f2 <GPIO_Init+0x1da>
 80005b0:	2304      	movs	r3, #4
 80005b2:	e01e      	b.n	80005f2 <GPIO_Init+0x1da>
 80005b4:	2303      	movs	r3, #3
 80005b6:	e01c      	b.n	80005f2 <GPIO_Init+0x1da>
 80005b8:	2302      	movs	r3, #2
 80005ba:	e01a      	b.n	80005f2 <GPIO_Init+0x1da>
 80005bc:	2301      	movs	r3, #1
 80005be:	e018      	b.n	80005f2 <GPIO_Init+0x1da>
 80005c0:	40013c00 	.word	0x40013c00
 80005c4:	40020000 	.word	0x40020000
 80005c8:	40020400 	.word	0x40020400
 80005cc:	40020800 	.word	0x40020800
 80005d0:	40020c00 	.word	0x40020c00
 80005d4:	40021000 	.word	0x40021000
 80005d8:	40021400 	.word	0x40021400
 80005dc:	40021800 	.word	0x40021800
 80005e0:	40021c00 	.word	0x40021c00
 80005e4:	40022000 	.word	0x40022000
 80005e8:	40022400 	.word	0x40022400
 80005ec:	40022800 	.word	0x40022800
 80005f0:	2300      	movs	r3, #0
 80005f2:	747b      	strb	r3, [r7, #17]

		SYSCFG_PCLK_EN();
 80005f4:	4b5c      	ldr	r3, [pc, #368]	; (8000768 <GPIO_Init+0x350>)
 80005f6:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 80005f8:	4a5b      	ldr	r2, [pc, #364]	; (8000768 <GPIO_Init+0x350>)
 80005fa:	f443 4380 	orr.w	r3, r3, #16384	; 0x4000
 80005fe:	6453      	str	r3, [r2, #68]	; 0x44

		SYSCFG->SYSCFG_EXTICR[temp1] = portcode << (temp2 * 4);
 8000600:	7c7a      	ldrb	r2, [r7, #17]
 8000602:	7cbb      	ldrb	r3, [r7, #18]
 8000604:	009b      	lsls	r3, r3, #2
 8000606:	fa02 f103 	lsl.w	r1, r2, r3
 800060a:	4a58      	ldr	r2, [pc, #352]	; (800076c <GPIO_Init+0x354>)
 800060c:	7cfb      	ldrb	r3, [r7, #19]
 800060e:	3302      	adds	r3, #2
 8000610:	f842 1023 	str.w	r1, [r2, r3, lsl #2]

		// enable the exti interrupt delivery using interrupt mask register
		EXTI->EXTI_IMR |= (1 << pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber);
 8000614:	4b56      	ldr	r3, [pc, #344]	; (8000770 <GPIO_Init+0x358>)
 8000616:	681b      	ldr	r3, [r3, #0]
 8000618:	687a      	ldr	r2, [r7, #4]
 800061a:	7912      	ldrb	r2, [r2, #4]
 800061c:	4611      	mov	r1, r2
 800061e:	2201      	movs	r2, #1
 8000620:	408a      	lsls	r2, r1
 8000622:	4611      	mov	r1, r2
 8000624:	4a52      	ldr	r2, [pc, #328]	; (8000770 <GPIO_Init+0x358>)
 8000626:	430b      	orrs	r3, r1
 8000628:	6013      	str	r3, [r2, #0]
	}

	/*initialize speed register*/
	temp = (pGPIOHandle->GPIO_PinConfig.GPIO_PinSpeed << (2 * pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber));
 800062a:	687b      	ldr	r3, [r7, #4]
 800062c:	799b      	ldrb	r3, [r3, #6]
 800062e:	461a      	mov	r2, r3
 8000630:	687b      	ldr	r3, [r7, #4]
 8000632:	791b      	ldrb	r3, [r3, #4]
 8000634:	005b      	lsls	r3, r3, #1
 8000636:	fa02 f303 	lsl.w	r3, r2, r3
 800063a:	617b      	str	r3, [r7, #20]
	pGPIOHandle->pGPIOx->OSPEEDR &= ~(0x3 << pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber);
 800063c:	687b      	ldr	r3, [r7, #4]
 800063e:	681b      	ldr	r3, [r3, #0]
 8000640:	689a      	ldr	r2, [r3, #8]
 8000642:	687b      	ldr	r3, [r7, #4]
 8000644:	791b      	ldrb	r3, [r3, #4]
 8000646:	4619      	mov	r1, r3
 8000648:	2303      	movs	r3, #3
 800064a:	408b      	lsls	r3, r1
 800064c:	43db      	mvns	r3, r3
 800064e:	4619      	mov	r1, r3
 8000650:	687b      	ldr	r3, [r7, #4]
 8000652:	681b      	ldr	r3, [r3, #0]
 8000654:	400a      	ands	r2, r1
 8000656:	609a      	str	r2, [r3, #8]
	pGPIOHandle->pGPIOx->OSPEEDR |= temp;
 8000658:	687b      	ldr	r3, [r7, #4]
 800065a:	681b      	ldr	r3, [r3, #0]
 800065c:	6899      	ldr	r1, [r3, #8]
 800065e:	687b      	ldr	r3, [r7, #4]
 8000660:	681b      	ldr	r3, [r3, #0]
 8000662:	697a      	ldr	r2, [r7, #20]
 8000664:	430a      	orrs	r2, r1
 8000666:	609a      	str	r2, [r3, #8]
	temp = 0;
 8000668:	2300      	movs	r3, #0
 800066a:	617b      	str	r3, [r7, #20]

	/*initialize pull up pull down register*/
	temp = (pGPIOHandle->GPIO_PinConfig.GPIO_PinPuPdControl << (2 * pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber));
 800066c:	687b      	ldr	r3, [r7, #4]
 800066e:	79db      	ldrb	r3, [r3, #7]
 8000670:	461a      	mov	r2, r3
 8000672:	687b      	ldr	r3, [r7, #4]
 8000674:	791b      	ldrb	r3, [r3, #4]
 8000676:	005b      	lsls	r3, r3, #1
 8000678:	fa02 f303 	lsl.w	r3, r2, r3
 800067c:	617b      	str	r3, [r7, #20]
	pGPIOHandle->pGPIOx->PUPDR &= ~(0x3 << pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber);
 800067e:	687b      	ldr	r3, [r7, #4]
 8000680:	681b      	ldr	r3, [r3, #0]
 8000682:	68da      	ldr	r2, [r3, #12]
 8000684:	687b      	ldr	r3, [r7, #4]
 8000686:	791b      	ldrb	r3, [r3, #4]
 8000688:	4619      	mov	r1, r3
 800068a:	2303      	movs	r3, #3
 800068c:	408b      	lsls	r3, r1
 800068e:	43db      	mvns	r3, r3
 8000690:	4619      	mov	r1, r3
 8000692:	687b      	ldr	r3, [r7, #4]
 8000694:	681b      	ldr	r3, [r3, #0]
 8000696:	400a      	ands	r2, r1
 8000698:	60da      	str	r2, [r3, #12]
	pGPIOHandle->pGPIOx->PUPDR |= temp;
 800069a:	687b      	ldr	r3, [r7, #4]
 800069c:	681b      	ldr	r3, [r3, #0]
 800069e:	68d9      	ldr	r1, [r3, #12]
 80006a0:	687b      	ldr	r3, [r7, #4]
 80006a2:	681b      	ldr	r3, [r3, #0]
 80006a4:	697a      	ldr	r2, [r7, #20]
 80006a6:	430a      	orrs	r2, r1
 80006a8:	60da      	str	r2, [r3, #12]
	temp = 0;
 80006aa:	2300      	movs	r3, #0
 80006ac:	617b      	str	r3, [r7, #20]

	/*initialize output type register*/
	temp = (pGPIOHandle->GPIO_PinConfig.GPIO_PinOPType << (pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber));
 80006ae:	687b      	ldr	r3, [r7, #4]
 80006b0:	7a1b      	ldrb	r3, [r3, #8]
 80006b2:	461a      	mov	r2, r3
 80006b4:	687b      	ldr	r3, [r7, #4]
 80006b6:	791b      	ldrb	r3, [r3, #4]
 80006b8:	fa02 f303 	lsl.w	r3, r2, r3
 80006bc:	617b      	str	r3, [r7, #20]
	pGPIOHandle->pGPIOx->OTYPER &= ~(0x3 << pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber);
 80006be:	687b      	ldr	r3, [r7, #4]
 80006c0:	681b      	ldr	r3, [r3, #0]
 80006c2:	685a      	ldr	r2, [r3, #4]
 80006c4:	687b      	ldr	r3, [r7, #4]
 80006c6:	791b      	ldrb	r3, [r3, #4]
 80006c8:	4619      	mov	r1, r3
 80006ca:	2303      	movs	r3, #3
 80006cc:	408b      	lsls	r3, r1
 80006ce:	43db      	mvns	r3, r3
 80006d0:	4619      	mov	r1, r3
 80006d2:	687b      	ldr	r3, [r7, #4]
 80006d4:	681b      	ldr	r3, [r3, #0]
 80006d6:	400a      	ands	r2, r1
 80006d8:	605a      	str	r2, [r3, #4]
	pGPIOHandle->pGPIOx->OTYPER |= temp;
 80006da:	687b      	ldr	r3, [r7, #4]
 80006dc:	681b      	ldr	r3, [r3, #0]
 80006de:	6859      	ldr	r1, [r3, #4]
 80006e0:	687b      	ldr	r3, [r7, #4]
 80006e2:	681b      	ldr	r3, [r3, #0]
 80006e4:	697a      	ldr	r2, [r7, #20]
 80006e6:	430a      	orrs	r2, r1
 80006e8:	605a      	str	r2, [r3, #4]
	temp = 0;
 80006ea:	2300      	movs	r3, #0
 80006ec:	617b      	str	r3, [r7, #20]

	/*initialize Alt FN register*/
	if(pGPIOHandle->GPIO_PinConfig.GPIO_PinMode == GPIO_MODE_ALTFN){
 80006ee:	687b      	ldr	r3, [r7, #4]
 80006f0:	795b      	ldrb	r3, [r3, #5]
 80006f2:	2b02      	cmp	r3, #2
 80006f4:	d132      	bne.n	800075c <GPIO_Init+0x344>
		uint32_t temp1, temp2;
		temp1 = pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber / 8;
 80006f6:	687b      	ldr	r3, [r7, #4]
 80006f8:	791b      	ldrb	r3, [r3, #4]
 80006fa:	08db      	lsrs	r3, r3, #3
 80006fc:	b2db      	uxtb	r3, r3
 80006fe:	60fb      	str	r3, [r7, #12]
		temp2 = pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber % 8;
 8000700:	687b      	ldr	r3, [r7, #4]
 8000702:	791b      	ldrb	r3, [r3, #4]
 8000704:	f003 0307 	and.w	r3, r3, #7
 8000708:	60bb      	str	r3, [r7, #8]
		pGPIOHandle->pGPIOx->AFR[temp1] &= ~(0xF << (4 * temp2));
 800070a:	687b      	ldr	r3, [r7, #4]
 800070c:	681b      	ldr	r3, [r3, #0]
 800070e:	68fa      	ldr	r2, [r7, #12]
 8000710:	3208      	adds	r2, #8
 8000712:	f853 2022 	ldr.w	r2, [r3, r2, lsl #2]
 8000716:	68bb      	ldr	r3, [r7, #8]
 8000718:	009b      	lsls	r3, r3, #2
 800071a:	210f      	movs	r1, #15
 800071c:	fa01 f303 	lsl.w	r3, r1, r3
 8000720:	43db      	mvns	r3, r3
 8000722:	4619      	mov	r1, r3
 8000724:	687b      	ldr	r3, [r7, #4]
 8000726:	681b      	ldr	r3, [r3, #0]
 8000728:	4011      	ands	r1, r2
 800072a:	68fa      	ldr	r2, [r7, #12]
 800072c:	3208      	adds	r2, #8
 800072e:	f843 1022 	str.w	r1, [r3, r2, lsl #2]
		pGPIOHandle->pGPIOx->AFR[temp1] |= (pGPIOHandle->GPIO_PinConfig.GPIO_PinAltFunMode << (4 * temp2));
 8000732:	687b      	ldr	r3, [r7, #4]
 8000734:	681b      	ldr	r3, [r3, #0]
 8000736:	68fa      	ldr	r2, [r7, #12]
 8000738:	3208      	adds	r2, #8
 800073a:	f853 2022 	ldr.w	r2, [r3, r2, lsl #2]
 800073e:	687b      	ldr	r3, [r7, #4]
 8000740:	7a5b      	ldrb	r3, [r3, #9]
 8000742:	4619      	mov	r1, r3
 8000744:	68bb      	ldr	r3, [r7, #8]
 8000746:	009b      	lsls	r3, r3, #2
 8000748:	fa01 f303 	lsl.w	r3, r1, r3
 800074c:	4619      	mov	r1, r3
 800074e:	687b      	ldr	r3, [r7, #4]
 8000750:	681b      	ldr	r3, [r3, #0]
 8000752:	4311      	orrs	r1, r2
 8000754:	68fa      	ldr	r2, [r7, #12]
 8000756:	3208      	adds	r2, #8
 8000758:	f843 1022 	str.w	r1, [r3, r2, lsl #2]
	}
}
 800075c:	bf00      	nop
 800075e:	371c      	adds	r7, #28
 8000760:	46bd      	mov	sp, r7
 8000762:	bc80      	pop	{r7}
 8000764:	4770      	bx	lr
 8000766:	bf00      	nop
 8000768:	40023800 	.word	0x40023800
 800076c:	40013800 	.word	0x40013800
 8000770:	40013c00 	.word	0x40013c00

08000774 <GPIO_TogglePin>:
 * @param[in]	: base address of the GPIO peripheral
 * @param[in]	: GPIOx pin number
 *
 * @return		: none
 */
void GPIO_TogglePin(GPIO_RegDef_t *pGPIOx, uint8_t PinNumber){
 8000774:	b480      	push	{r7}
 8000776:	b083      	sub	sp, #12
 8000778:	af00      	add	r7, sp, #0
 800077a:	6078      	str	r0, [r7, #4]
 800077c:	460b      	mov	r3, r1
 800077e:	70fb      	strb	r3, [r7, #3]
	pGPIOx->ODR = pGPIOx->ODR ^ (1 << PinNumber);
 8000780:	687b      	ldr	r3, [r7, #4]
 8000782:	695b      	ldr	r3, [r3, #20]
 8000784:	78fa      	ldrb	r2, [r7, #3]
 8000786:	2101      	movs	r1, #1
 8000788:	fa01 f202 	lsl.w	r2, r1, r2
 800078c:	405a      	eors	r2, r3
 800078e:	687b      	ldr	r3, [r7, #4]
 8000790:	615a      	str	r2, [r3, #20]
}
 8000792:	bf00      	nop
 8000794:	370c      	adds	r7, #12
 8000796:	46bd      	mov	sp, r7
 8000798:	bc80      	pop	{r7}
 800079a:	4770      	bx	lr

0800079c <GPIO_IRQInterruptConfig>:
 * @param[in]	: IRQ Priority
 * @param[in]	: enable (1) or disable (0)
 *
 * @return		: none
 */
void GPIO_IRQInterruptConfig(uint8_t IRQNumber, uint8_t en_di){
 800079c:	b480      	push	{r7}
 800079e:	b083      	sub	sp, #12
 80007a0:	af00      	add	r7, sp, #0
 80007a2:	4603      	mov	r3, r0
 80007a4:	460a      	mov	r2, r1
 80007a6:	71fb      	strb	r3, [r7, #7]
 80007a8:	4613      	mov	r3, r2
 80007aa:	71bb      	strb	r3, [r7, #6]

	if(en_di){
 80007ac:	79bb      	ldrb	r3, [r7, #6]
 80007ae:	2b00      	cmp	r3, #0
 80007b0:	d033      	beq.n	800081a <GPIO_IRQInterruptConfig+0x7e>
		if(IRQNumber <= 31){								/*ISER0 Register*/
 80007b2:	79fb      	ldrb	r3, [r7, #7]
 80007b4:	2b1f      	cmp	r3, #31
 80007b6:	d80a      	bhi.n	80007ce <GPIO_IRQInterruptConfig+0x32>
			*NVIC_ISER0 |= (1 << IRQNumber);
 80007b8:	4b34      	ldr	r3, [pc, #208]	; (800088c <GPIO_IRQInterruptConfig+0xf0>)
 80007ba:	681b      	ldr	r3, [r3, #0]
 80007bc:	79fa      	ldrb	r2, [r7, #7]
 80007be:	2101      	movs	r1, #1
 80007c0:	fa01 f202 	lsl.w	r2, r1, r2
 80007c4:	4611      	mov	r1, r2
 80007c6:	4a31      	ldr	r2, [pc, #196]	; (800088c <GPIO_IRQInterruptConfig+0xf0>)
 80007c8:	430b      	orrs	r3, r1
 80007ca:	6013      	str	r3, [r2, #0]
			*NVIC_ICER1 |= (1 << (IRQNumber % 32));
		}else if(IRQNumber >= 64 && IRQNumber < 96){		/*ICER2 Register*/
			*NVIC_ICER2 |= (1 << (IRQNumber % 64));
		}
	}
}
 80007cc:	e059      	b.n	8000882 <GPIO_IRQInterruptConfig+0xe6>
		}else if(IRQNumber > 31 && IRQNumber < 64){			/*ISER1 Register*/
 80007ce:	79fb      	ldrb	r3, [r7, #7]
 80007d0:	2b1f      	cmp	r3, #31
 80007d2:	d90f      	bls.n	80007f4 <GPIO_IRQInterruptConfig+0x58>
 80007d4:	79fb      	ldrb	r3, [r7, #7]
 80007d6:	2b3f      	cmp	r3, #63	; 0x3f
 80007d8:	d80c      	bhi.n	80007f4 <GPIO_IRQInterruptConfig+0x58>
			*NVIC_ISER1 |= (1 << (IRQNumber % 32));
 80007da:	4b2d      	ldr	r3, [pc, #180]	; (8000890 <GPIO_IRQInterruptConfig+0xf4>)
 80007dc:	681b      	ldr	r3, [r3, #0]
 80007de:	79fa      	ldrb	r2, [r7, #7]
 80007e0:	f002 021f 	and.w	r2, r2, #31
 80007e4:	2101      	movs	r1, #1
 80007e6:	fa01 f202 	lsl.w	r2, r1, r2
 80007ea:	4611      	mov	r1, r2
 80007ec:	4a28      	ldr	r2, [pc, #160]	; (8000890 <GPIO_IRQInterruptConfig+0xf4>)
 80007ee:	430b      	orrs	r3, r1
 80007f0:	6013      	str	r3, [r2, #0]
 80007f2:	e046      	b.n	8000882 <GPIO_IRQInterruptConfig+0xe6>
		}else if(IRQNumber >= 64 && IRQNumber < 96){		/*ISER2 Register*/
 80007f4:	79fb      	ldrb	r3, [r7, #7]
 80007f6:	2b3f      	cmp	r3, #63	; 0x3f
 80007f8:	d943      	bls.n	8000882 <GPIO_IRQInterruptConfig+0xe6>
 80007fa:	79fb      	ldrb	r3, [r7, #7]
 80007fc:	2b5f      	cmp	r3, #95	; 0x5f
 80007fe:	d840      	bhi.n	8000882 <GPIO_IRQInterruptConfig+0xe6>
			*NVIC_ISER2 |= (1 << (IRQNumber % 64));
 8000800:	4b24      	ldr	r3, [pc, #144]	; (8000894 <GPIO_IRQInterruptConfig+0xf8>)
 8000802:	681b      	ldr	r3, [r3, #0]
 8000804:	79fa      	ldrb	r2, [r7, #7]
 8000806:	f002 023f 	and.w	r2, r2, #63	; 0x3f
 800080a:	2101      	movs	r1, #1
 800080c:	fa01 f202 	lsl.w	r2, r1, r2
 8000810:	4611      	mov	r1, r2
 8000812:	4a20      	ldr	r2, [pc, #128]	; (8000894 <GPIO_IRQInterruptConfig+0xf8>)
 8000814:	430b      	orrs	r3, r1
 8000816:	6013      	str	r3, [r2, #0]
}
 8000818:	e033      	b.n	8000882 <GPIO_IRQInterruptConfig+0xe6>
		if(IRQNumber <= 31){								/*ICER0 Register*/
 800081a:	79fb      	ldrb	r3, [r7, #7]
 800081c:	2b1f      	cmp	r3, #31
 800081e:	d80a      	bhi.n	8000836 <GPIO_IRQInterruptConfig+0x9a>
			*NVIC_ICER0 |= (1 << IRQNumber);
 8000820:	4b1d      	ldr	r3, [pc, #116]	; (8000898 <GPIO_IRQInterruptConfig+0xfc>)
 8000822:	681b      	ldr	r3, [r3, #0]
 8000824:	79fa      	ldrb	r2, [r7, #7]
 8000826:	2101      	movs	r1, #1
 8000828:	fa01 f202 	lsl.w	r2, r1, r2
 800082c:	4611      	mov	r1, r2
 800082e:	4a1a      	ldr	r2, [pc, #104]	; (8000898 <GPIO_IRQInterruptConfig+0xfc>)
 8000830:	430b      	orrs	r3, r1
 8000832:	6013      	str	r3, [r2, #0]
}
 8000834:	e025      	b.n	8000882 <GPIO_IRQInterruptConfig+0xe6>
		}else if(IRQNumber > 31 && IRQNumber < 64){			/*ICER1 Register*/
 8000836:	79fb      	ldrb	r3, [r7, #7]
 8000838:	2b1f      	cmp	r3, #31
 800083a:	d90f      	bls.n	800085c <GPIO_IRQInterruptConfig+0xc0>
 800083c:	79fb      	ldrb	r3, [r7, #7]
 800083e:	2b3f      	cmp	r3, #63	; 0x3f
 8000840:	d80c      	bhi.n	800085c <GPIO_IRQInterruptConfig+0xc0>
			*NVIC_ICER1 |= (1 << (IRQNumber % 32));
 8000842:	4b16      	ldr	r3, [pc, #88]	; (800089c <GPIO_IRQInterruptConfig+0x100>)
 8000844:	681b      	ldr	r3, [r3, #0]
 8000846:	79fa      	ldrb	r2, [r7, #7]
 8000848:	f002 021f 	and.w	r2, r2, #31
 800084c:	2101      	movs	r1, #1
 800084e:	fa01 f202 	lsl.w	r2, r1, r2
 8000852:	4611      	mov	r1, r2
 8000854:	4a11      	ldr	r2, [pc, #68]	; (800089c <GPIO_IRQInterruptConfig+0x100>)
 8000856:	430b      	orrs	r3, r1
 8000858:	6013      	str	r3, [r2, #0]
 800085a:	e012      	b.n	8000882 <GPIO_IRQInterruptConfig+0xe6>
		}else if(IRQNumber >= 64 && IRQNumber < 96){		/*ICER2 Register*/
 800085c:	79fb      	ldrb	r3, [r7, #7]
 800085e:	2b3f      	cmp	r3, #63	; 0x3f
 8000860:	d90f      	bls.n	8000882 <GPIO_IRQInterruptConfig+0xe6>
 8000862:	79fb      	ldrb	r3, [r7, #7]
 8000864:	2b5f      	cmp	r3, #95	; 0x5f
 8000866:	d80c      	bhi.n	8000882 <GPIO_IRQInterruptConfig+0xe6>
			*NVIC_ICER2 |= (1 << (IRQNumber % 64));
 8000868:	4b0d      	ldr	r3, [pc, #52]	; (80008a0 <GPIO_IRQInterruptConfig+0x104>)
 800086a:	681b      	ldr	r3, [r3, #0]
 800086c:	79fa      	ldrb	r2, [r7, #7]
 800086e:	f002 023f 	and.w	r2, r2, #63	; 0x3f
 8000872:	2101      	movs	r1, #1
 8000874:	fa01 f202 	lsl.w	r2, r1, r2
 8000878:	4611      	mov	r1, r2
 800087a:	4a09      	ldr	r2, [pc, #36]	; (80008a0 <GPIO_IRQInterruptConfig+0x104>)
 800087c:	430b      	orrs	r3, r1
 800087e:	6013      	str	r3, [r2, #0]
}
 8000880:	e7ff      	b.n	8000882 <GPIO_IRQInterruptConfig+0xe6>
 8000882:	bf00      	nop
 8000884:	370c      	adds	r7, #12
 8000886:	46bd      	mov	sp, r7
 8000888:	bc80      	pop	{r7}
 800088a:	4770      	bx	lr
 800088c:	e000e100 	.word	0xe000e100
 8000890:	e000e104 	.word	0xe000e104
 8000894:	e000e108 	.word	0xe000e108
 8000898:	e000e180 	.word	0xe000e180
 800089c:	e000e184 	.word	0xe000e184
 80008a0:	e000e188 	.word	0xe000e188

080008a4 <GPIO_IRQPriorityConfig>:

void GPIO_IRQPriorityConfig(uint8_t IRQNumber, uint32_t IRQPriority){
 80008a4:	b480      	push	{r7}
 80008a6:	b085      	sub	sp, #20
 80008a8:	af00      	add	r7, sp, #0
 80008aa:	4603      	mov	r3, r0
 80008ac:	6039      	str	r1, [r7, #0]
 80008ae:	71fb      	strb	r3, [r7, #7]
	// find ipr register
	uint8_t iprx = IRQNumber / 4;
 80008b0:	79fb      	ldrb	r3, [r7, #7]
 80008b2:	089b      	lsrs	r3, r3, #2
 80008b4:	73fb      	strb	r3, [r7, #15]
	uint8_t iprx_section = IRQNumber % 4;
 80008b6:	79fb      	ldrb	r3, [r7, #7]
 80008b8:	f003 0303 	and.w	r3, r3, #3
 80008bc:	73bb      	strb	r3, [r7, #14]
	uint8_t shiftamt = (8 * iprx_section) + (8 - NO_PR_BITS_IMP);
 80008be:	7bbb      	ldrb	r3, [r7, #14]
 80008c0:	00db      	lsls	r3, r3, #3
 80008c2:	b2db      	uxtb	r3, r3
 80008c4:	3304      	adds	r3, #4
 80008c6:	737b      	strb	r3, [r7, #13]
	*(NVIC_PR_BASE + iprx) |= (IRQPriority << shiftamt);
 80008c8:	7bfb      	ldrb	r3, [r7, #15]
 80008ca:	009b      	lsls	r3, r3, #2
 80008cc:	f103 4360 	add.w	r3, r3, #3758096384	; 0xe0000000
 80008d0:	f503 4364 	add.w	r3, r3, #58368	; 0xe400
 80008d4:	6819      	ldr	r1, [r3, #0]
 80008d6:	7b7b      	ldrb	r3, [r7, #13]
 80008d8:	683a      	ldr	r2, [r7, #0]
 80008da:	409a      	lsls	r2, r3
 80008dc:	7bfb      	ldrb	r3, [r7, #15]
 80008de:	009b      	lsls	r3, r3, #2
 80008e0:	f103 4360 	add.w	r3, r3, #3758096384	; 0xe0000000
 80008e4:	f503 4364 	add.w	r3, r3, #58368	; 0xe400
 80008e8:	430a      	orrs	r2, r1
 80008ea:	601a      	str	r2, [r3, #0]
}
 80008ec:	bf00      	nop
 80008ee:	3714      	adds	r7, #20
 80008f0:	46bd      	mov	sp, r7
 80008f2:	bc80      	pop	{r7}
 80008f4:	4770      	bx	lr
	...

080008f8 <GPIO_IRQHandling>:
 *
 * @param[in]	: GPIOx pin number
 *
 * @return		: none
 */
void GPIO_IRQHandling(uint8_t PinNumber){
 80008f8:	b480      	push	{r7}
 80008fa:	b083      	sub	sp, #12
 80008fc:	af00      	add	r7, sp, #0
 80008fe:	4603      	mov	r3, r0
 8000900:	71fb      	strb	r3, [r7, #7]
	//clear the exti pr register with respect to the pin number
	if(EXTI->EXTI_PR & (1 << PinNumber)){		// if PR bit postion corresponding to pin number is set
 8000902:	4b0c      	ldr	r3, [pc, #48]	; (8000934 <GPIO_IRQHandling+0x3c>)
 8000904:	695b      	ldr	r3, [r3, #20]
 8000906:	79fa      	ldrb	r2, [r7, #7]
 8000908:	2101      	movs	r1, #1
 800090a:	fa01 f202 	lsl.w	r2, r1, r2
 800090e:	4013      	ands	r3, r2
 8000910:	2b00      	cmp	r3, #0
 8000912:	d009      	beq.n	8000928 <GPIO_IRQHandling+0x30>
		EXTI->EXTI_PR |= (1 << PinNumber);		// cleardddddddd
 8000914:	4b07      	ldr	r3, [pc, #28]	; (8000934 <GPIO_IRQHandling+0x3c>)
 8000916:	695b      	ldr	r3, [r3, #20]
 8000918:	79fa      	ldrb	r2, [r7, #7]
 800091a:	2101      	movs	r1, #1
 800091c:	fa01 f202 	lsl.w	r2, r1, r2
 8000920:	4611      	mov	r1, r2
 8000922:	4a04      	ldr	r2, [pc, #16]	; (8000934 <GPIO_IRQHandling+0x3c>)
 8000924:	430b      	orrs	r3, r1
 8000926:	6153      	str	r3, [r2, #20]
	}
}
 8000928:	bf00      	nop
 800092a:	370c      	adds	r7, #12
 800092c:	46bd      	mov	sp, r7
 800092e:	bc80      	pop	{r7}
 8000930:	4770      	bx	lr
 8000932:	bf00      	nop
 8000934:	40013c00 	.word	0x40013c00

08000938 <delay>:

#include <string.h>
#include "stm32f407xx.h"
#include "stm32f407xx_gpio_driver.h"

void delay(uint16_t kilo_cycles){
 8000938:	b480      	push	{r7}
 800093a:	b085      	sub	sp, #20
 800093c:	af00      	add	r7, sp, #0
 800093e:	4603      	mov	r3, r0
 8000940:	80fb      	strh	r3, [r7, #6]
	uint16_t c, d;
   for (c = 1; c <= kilo_cycles; c++)
 8000942:	2301      	movs	r3, #1
 8000944:	81fb      	strh	r3, [r7, #14]
 8000946:	e00c      	b.n	8000962 <delay+0x2a>
	   for (d = 1; d <= 1000; d++)
 8000948:	2301      	movs	r3, #1
 800094a:	81bb      	strh	r3, [r7, #12]
 800094c:	e002      	b.n	8000954 <delay+0x1c>
 800094e:	89bb      	ldrh	r3, [r7, #12]
 8000950:	3301      	adds	r3, #1
 8000952:	81bb      	strh	r3, [r7, #12]
 8000954:	89bb      	ldrh	r3, [r7, #12]
 8000956:	f5b3 7f7a 	cmp.w	r3, #1000	; 0x3e8
 800095a:	d9f8      	bls.n	800094e <delay+0x16>
   for (c = 1; c <= kilo_cycles; c++)
 800095c:	89fb      	ldrh	r3, [r7, #14]
 800095e:	3301      	adds	r3, #1
 8000960:	81fb      	strh	r3, [r7, #14]
 8000962:	89fa      	ldrh	r2, [r7, #14]
 8000964:	88fb      	ldrh	r3, [r7, #6]
 8000966:	429a      	cmp	r2, r3
 8000968:	d9ee      	bls.n	8000948 <delay+0x10>
	   {}
}
 800096a:	bf00      	nop
 800096c:	3714      	adds	r7, #20
 800096e:	46bd      	mov	sp, r7
 8000970:	bc80      	pop	{r7}
 8000972:	4770      	bx	lr

08000974 <main>:

int main(void)
{
 8000974:	b580      	push	{r7, lr}
 8000976:	b086      	sub	sp, #24
 8000978:	af00      	add	r7, sp, #0
	GPIO_Handle_t gpioLED;
	memset(&gpioLED, 0, sizeof(gpioLED)); 	//set member elements to zero
 800097a:	f107 030c 	add.w	r3, r7, #12
 800097e:	220c      	movs	r2, #12
 8000980:	2100      	movs	r1, #0
 8000982:	4618      	mov	r0, r3
 8000984:	f000 f89a 	bl	8000abc <memset>
	gpioLED.pGPIOx = GPIOD;
 8000988:	4b1a      	ldr	r3, [pc, #104]	; (80009f4 <main+0x80>)
 800098a:	60fb      	str	r3, [r7, #12]
	gpioLED.GPIO_PinConfig.GPIO_PinNumber = GPIO_PIN_13;
 800098c:	230d      	movs	r3, #13
 800098e:	743b      	strb	r3, [r7, #16]
	gpioLED.GPIO_PinConfig.GPIO_PinMode = GPIO_MODE_OUT;
 8000990:	2301      	movs	r3, #1
 8000992:	747b      	strb	r3, [r7, #17]
	gpioLED.GPIO_PinConfig.GPIO_PinSpeed = GPIO_SPEED_FAST;
 8000994:	2302      	movs	r3, #2
 8000996:	74bb      	strb	r3, [r7, #18]
	gpioLED.GPIO_PinConfig.GPIO_PinOPType = GPIO_OP_TYPE_OD;
 8000998:	2301      	movs	r3, #1
 800099a:	753b      	strb	r3, [r7, #20]
	gpioLED.GPIO_PinConfig.GPIO_PinPuPdControl = GPIO_NO_PUPD;
 800099c:	2300      	movs	r3, #0
 800099e:	74fb      	strb	r3, [r7, #19]

	GPIO_Handle_t gpioBTN;
	memset(&gpioBTN, 0, sizeof(gpioBTN));	//set member elements to zero
 80009a0:	463b      	mov	r3, r7
 80009a2:	220c      	movs	r2, #12
 80009a4:	2100      	movs	r1, #0
 80009a6:	4618      	mov	r0, r3
 80009a8:	f000 f888 	bl	8000abc <memset>
	gpioBTN.pGPIOx = GPIOB;
 80009ac:	4b12      	ldr	r3, [pc, #72]	; (80009f8 <main+0x84>)
 80009ae:	603b      	str	r3, [r7, #0]
	gpioBTN.GPIO_PinConfig.GPIO_PinNumber = GPIO_PIN_12;
 80009b0:	230c      	movs	r3, #12
 80009b2:	713b      	strb	r3, [r7, #4]
	gpioBTN.GPIO_PinConfig.GPIO_PinMode = GPIO_MODE_IT_FL;
 80009b4:	2304      	movs	r3, #4
 80009b6:	717b      	strb	r3, [r7, #5]
	gpioBTN.GPIO_PinConfig.GPIO_PinSpeed = GPIO_SPEED_FAST;
 80009b8:	2302      	movs	r3, #2
 80009ba:	71bb      	strb	r3, [r7, #6]
	gpioBTN.GPIO_PinConfig.GPIO_PinPuPdControl = GPIO_NO_PUPD;
 80009bc:	2300      	movs	r3, #0
 80009be:	71fb      	strb	r3, [r7, #7]


	GPIO_PCLKControl(GPIOD, ENABLE);
 80009c0:	2101      	movs	r1, #1
 80009c2:	480c      	ldr	r0, [pc, #48]	; (80009f4 <main+0x80>)
 80009c4:	f7ff fc10 	bl	80001e8 <GPIO_PCLKControl>
	GPIO_PCLKControl(GPIOB, ENABLE);
 80009c8:	2101      	movs	r1, #1
 80009ca:	480b      	ldr	r0, [pc, #44]	; (80009f8 <main+0x84>)
 80009cc:	f7ff fc0c 	bl	80001e8 <GPIO_PCLKControl>

	GPIO_Init(&gpioLED);
 80009d0:	f107 030c 	add.w	r3, r7, #12
 80009d4:	4618      	mov	r0, r3
 80009d6:	f7ff fd1f 	bl	8000418 <GPIO_Init>
	GPIO_Init(&gpioBTN);
 80009da:	463b      	mov	r3, r7
 80009dc:	4618      	mov	r0, r3
 80009de:	f7ff fd1b 	bl	8000418 <GPIO_Init>

	//IRQ Config
	GPIO_IRQPriorityConfig(IRQ_NO_EXTI15_10, NVIC_IRQ_PRIO_15);
 80009e2:	210f      	movs	r1, #15
 80009e4:	2028      	movs	r0, #40	; 0x28
 80009e6:	f7ff ff5d 	bl	80008a4 <GPIO_IRQPriorityConfig>
	GPIO_IRQInterruptConfig(IRQ_NO_EXTI15_10, EN);
 80009ea:	2101      	movs	r1, #1
 80009ec:	2028      	movs	r0, #40	; 0x28
 80009ee:	f7ff fed5 	bl	800079c <GPIO_IRQInterruptConfig>

	// circuit shorts when button is pressed
	while(1);
 80009f2:	e7fe      	b.n	80009f2 <main+0x7e>
 80009f4:	40020c00 	.word	0x40020c00
 80009f8:	40020400 	.word	0x40020400

080009fc <EXTI15_10_IRQHandler>:
}

void EXTI15_10_IRQHandler(void){
 80009fc:	b580      	push	{r7, lr}
 80009fe:	af00      	add	r7, sp, #0
	delay(1000);
 8000a00:	f44f 707a 	mov.w	r0, #1000	; 0x3e8
 8000a04:	f7ff ff98 	bl	8000938 <delay>
	GPIO_IRQHandling(GPIO_PIN_12);
 8000a08:	200c      	movs	r0, #12
 8000a0a:	f7ff ff75 	bl	80008f8 <GPIO_IRQHandling>
	GPIO_TogglePin(GPIOD, GPIO_PIN_13);
 8000a0e:	210d      	movs	r1, #13
 8000a10:	4802      	ldr	r0, [pc, #8]	; (8000a1c <EXTI15_10_IRQHandler+0x20>)
 8000a12:	f7ff feaf 	bl	8000774 <GPIO_TogglePin>
}
 8000a16:	bf00      	nop
 8000a18:	bd80      	pop	{r7, pc}
 8000a1a:	bf00      	nop
 8000a1c:	40020c00 	.word	0x40020c00

08000a20 <Reset_Handler>:

  .section .text.Reset_Handler
  .weak Reset_Handler
  .type Reset_Handler, %function
Reset_Handler:
  ldr   r0, =_estack
 8000a20:	480d      	ldr	r0, [pc, #52]	; (8000a58 <LoopForever+0x2>)
  mov   sp, r0          /* set stack pointer */
 8000a22:	4685      	mov	sp, r0
/* Call the clock system intitialization function.*/
  bl  SystemInit
 8000a24:	f3af 8000 	nop.w

/* Copy the data segment initializers from flash to SRAM */
  ldr r0, =_sdata
 8000a28:	480c      	ldr	r0, [pc, #48]	; (8000a5c <LoopForever+0x6>)
  ldr r1, =_edata
 8000a2a:	490d      	ldr	r1, [pc, #52]	; (8000a60 <LoopForever+0xa>)
  ldr r2, =_sidata
 8000a2c:	4a0d      	ldr	r2, [pc, #52]	; (8000a64 <LoopForever+0xe>)
  movs r3, #0
 8000a2e:	2300      	movs	r3, #0
  b LoopCopyDataInit
 8000a30:	e002      	b.n	8000a38 <LoopCopyDataInit>

08000a32 <CopyDataInit>:

CopyDataInit:
  ldr r4, [r2, r3]
 8000a32:	58d4      	ldr	r4, [r2, r3]
  str r4, [r0, r3]
 8000a34:	50c4      	str	r4, [r0, r3]
  adds r3, r3, #4
 8000a36:	3304      	adds	r3, #4

08000a38 <LoopCopyDataInit>:

LoopCopyDataInit:
  adds r4, r0, r3
 8000a38:	18c4      	adds	r4, r0, r3
  cmp r4, r1
 8000a3a:	428c      	cmp	r4, r1
  bcc CopyDataInit
 8000a3c:	d3f9      	bcc.n	8000a32 <CopyDataInit>

/* Zero fill the bss segment. */
  ldr r2, =_sbss
 8000a3e:	4a0a      	ldr	r2, [pc, #40]	; (8000a68 <LoopForever+0x12>)
  ldr r4, =_ebss
 8000a40:	4c0a      	ldr	r4, [pc, #40]	; (8000a6c <LoopForever+0x16>)
  movs r3, #0
 8000a42:	2300      	movs	r3, #0
  b LoopFillZerobss
 8000a44:	e001      	b.n	8000a4a <LoopFillZerobss>

08000a46 <FillZerobss>:

FillZerobss:
  str  r3, [r2]
 8000a46:	6013      	str	r3, [r2, #0]
  adds r2, r2, #4
 8000a48:	3204      	adds	r2, #4

08000a4a <LoopFillZerobss>:

LoopFillZerobss:
  cmp r2, r4
 8000a4a:	42a2      	cmp	r2, r4
  bcc FillZerobss
 8000a4c:	d3fb      	bcc.n	8000a46 <FillZerobss>

/* Call static constructors */
  bl __libc_init_array
 8000a4e:	f000 f811 	bl	8000a74 <__libc_init_array>
/* Call the application's entry point.*/
  bl main
 8000a52:	f7ff ff8f 	bl	8000974 <main>

08000a56 <LoopForever>:

LoopForever:
    b LoopForever
 8000a56:	e7fe      	b.n	8000a56 <LoopForever>
  ldr   r0, =_estack
 8000a58:	20020000 	.word	0x20020000
  ldr r0, =_sdata
 8000a5c:	20000000 	.word	0x20000000
  ldr r1, =_edata
 8000a60:	20000000 	.word	0x20000000
  ldr r2, =_sidata
 8000a64:	08000aec 	.word	0x08000aec
  ldr r2, =_sbss
 8000a68:	20000000 	.word	0x20000000
  ldr r4, =_ebss
 8000a6c:	2000001c 	.word	0x2000001c

08000a70 <ADC_IRQHandler>:
 * @retval : None
*/
  .section .text.Default_Handler,"ax",%progbits
Default_Handler:
Infinite_Loop:
  b Infinite_Loop
 8000a70:	e7fe      	b.n	8000a70 <ADC_IRQHandler>
	...

08000a74 <__libc_init_array>:
 8000a74:	b570      	push	{r4, r5, r6, lr}
 8000a76:	4e0d      	ldr	r6, [pc, #52]	; (8000aac <__libc_init_array+0x38>)
 8000a78:	4c0d      	ldr	r4, [pc, #52]	; (8000ab0 <__libc_init_array+0x3c>)
 8000a7a:	1ba4      	subs	r4, r4, r6
 8000a7c:	10a4      	asrs	r4, r4, #2
 8000a7e:	2500      	movs	r5, #0
 8000a80:	42a5      	cmp	r5, r4
 8000a82:	d109      	bne.n	8000a98 <__libc_init_array+0x24>
 8000a84:	4e0b      	ldr	r6, [pc, #44]	; (8000ab4 <__libc_init_array+0x40>)
 8000a86:	4c0c      	ldr	r4, [pc, #48]	; (8000ab8 <__libc_init_array+0x44>)
 8000a88:	f000 f820 	bl	8000acc <_init>
 8000a8c:	1ba4      	subs	r4, r4, r6
 8000a8e:	10a4      	asrs	r4, r4, #2
 8000a90:	2500      	movs	r5, #0
 8000a92:	42a5      	cmp	r5, r4
 8000a94:	d105      	bne.n	8000aa2 <__libc_init_array+0x2e>
 8000a96:	bd70      	pop	{r4, r5, r6, pc}
 8000a98:	f856 3025 	ldr.w	r3, [r6, r5, lsl #2]
 8000a9c:	4798      	blx	r3
 8000a9e:	3501      	adds	r5, #1
 8000aa0:	e7ee      	b.n	8000a80 <__libc_init_array+0xc>
 8000aa2:	f856 3025 	ldr.w	r3, [r6, r5, lsl #2]
 8000aa6:	4798      	blx	r3
 8000aa8:	3501      	adds	r5, #1
 8000aaa:	e7f2      	b.n	8000a92 <__libc_init_array+0x1e>
 8000aac:	08000ae4 	.word	0x08000ae4
 8000ab0:	08000ae4 	.word	0x08000ae4
 8000ab4:	08000ae4 	.word	0x08000ae4
 8000ab8:	08000ae8 	.word	0x08000ae8

08000abc <memset>:
 8000abc:	4402      	add	r2, r0
 8000abe:	4603      	mov	r3, r0
 8000ac0:	4293      	cmp	r3, r2
 8000ac2:	d100      	bne.n	8000ac6 <memset+0xa>
 8000ac4:	4770      	bx	lr
 8000ac6:	f803 1b01 	strb.w	r1, [r3], #1
 8000aca:	e7f9      	b.n	8000ac0 <memset+0x4>

08000acc <_init>:
 8000acc:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8000ace:	bf00      	nop
 8000ad0:	bcf8      	pop	{r3, r4, r5, r6, r7}
 8000ad2:	bc08      	pop	{r3}
 8000ad4:	469e      	mov	lr, r3
 8000ad6:	4770      	bx	lr

08000ad8 <_fini>:
 8000ad8:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8000ada:	bf00      	nop
 8000adc:	bcf8      	pop	{r3, r4, r5, r6, r7}
 8000ade:	bc08      	pop	{r3}
 8000ae0:	469e      	mov	lr, r3
 8000ae2:	4770      	bx	lr
