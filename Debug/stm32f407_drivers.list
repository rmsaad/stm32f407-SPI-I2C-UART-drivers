
stm32f407_drivers.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   000001a8  08000000  08000000  00010000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         00000728  080001a8  080001a8  000101a8  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       00000068  080008d0  080008d0  000108d0  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  3 .ARM.extab    00000000  08000938  08000938  00010940  2**0
                  CONTENTS
  4 .ARM          00000000  08000938  08000938  00010940  2**0
                  CONTENTS
  5 .preinit_array 00000000  08000938  08000940  00010940  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  6 .init_array   00000004  08000938  08000938  00010938  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  7 .fini_array   00000004  0800093c  0800093c  0001093c  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  8 .data         00000000  20000000  20000000  00010940  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  9 .bss          000000a4  20000000  08000940  00020000  2**2
                  ALLOC
 10 ._user_heap_stack 00000604  200000a4  08000940  000200a4  2**0
                  ALLOC
 11 .ARM.attributes 0000002a  00000000  00000000  00010940  2**0
                  CONTENTS, READONLY
 12 .debug_info   00001735  00000000  00000000  0001096a  2**0
                  CONTENTS, READONLY, DEBUGGING
 13 .debug_abbrev 000004ca  00000000  00000000  0001209f  2**0
                  CONTENTS, READONLY, DEBUGGING
 14 .debug_loc    0000061c  00000000  00000000  00012569  2**0
                  CONTENTS, READONLY, DEBUGGING
 15 .debug_aranges 000000f8  00000000  00000000  00012b88  2**3
                  CONTENTS, READONLY, DEBUGGING
 16 .debug_ranges 000000c0  00000000  00000000  00012c80  2**3
                  CONTENTS, READONLY, DEBUGGING
 17 .debug_macro  000021d5  00000000  00000000  00012d40  2**0
                  CONTENTS, READONLY, DEBUGGING
 18 .debug_line   00001162  00000000  00000000  00014f15  2**0
                  CONTENTS, READONLY, DEBUGGING
 19 .debug_str    00009e73  00000000  00000000  00016077  2**0
                  CONTENTS, READONLY, DEBUGGING
 20 .comment      0000007b  00000000  00000000  0001feea  2**0
                  CONTENTS, READONLY
 21 .debug_frame  000001c4  00000000  00000000  0001ff68  2**2
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

080001a8 <__do_global_dtors_aux>:
 80001a8:	b510      	push	{r4, lr}
 80001aa:	4c05      	ldr	r4, [pc, #20]	; (80001c0 <__do_global_dtors_aux+0x18>)
 80001ac:	7823      	ldrb	r3, [r4, #0]
 80001ae:	b933      	cbnz	r3, 80001be <__do_global_dtors_aux+0x16>
 80001b0:	4b04      	ldr	r3, [pc, #16]	; (80001c4 <__do_global_dtors_aux+0x1c>)
 80001b2:	b113      	cbz	r3, 80001ba <__do_global_dtors_aux+0x12>
 80001b4:	4804      	ldr	r0, [pc, #16]	; (80001c8 <__do_global_dtors_aux+0x20>)
 80001b6:	f3af 8000 	nop.w
 80001ba:	2301      	movs	r3, #1
 80001bc:	7023      	strb	r3, [r4, #0]
 80001be:	bd10      	pop	{r4, pc}
 80001c0:	20000000 	.word	0x20000000
 80001c4:	00000000 	.word	0x00000000
 80001c8:	080008b8 	.word	0x080008b8

080001cc <frame_dummy>:
 80001cc:	b508      	push	{r3, lr}
 80001ce:	4b03      	ldr	r3, [pc, #12]	; (80001dc <frame_dummy+0x10>)
 80001d0:	b11b      	cbz	r3, 80001da <frame_dummy+0xe>
 80001d2:	4903      	ldr	r1, [pc, #12]	; (80001e0 <frame_dummy+0x14>)
 80001d4:	4803      	ldr	r0, [pc, #12]	; (80001e4 <frame_dummy+0x18>)
 80001d6:	f3af 8000 	nop.w
 80001da:	bd08      	pop	{r3, pc}
 80001dc:	00000000 	.word	0x00000000
 80001e0:	20000004 	.word	0x20000004
 80001e4:	080008b8 	.word	0x080008b8

080001e8 <strlen>:
 80001e8:	4603      	mov	r3, r0
 80001ea:	f813 2b01 	ldrb.w	r2, [r3], #1
 80001ee:	2a00      	cmp	r2, #0
 80001f0:	d1fb      	bne.n	80001ea <strlen+0x2>
 80001f2:	1a18      	subs	r0, r3, r0
 80001f4:	3801      	subs	r0, #1
 80001f6:	4770      	bx	lr

080001f8 <GPIO_PCLKControl>:
 * @param[in]	: enable(1) or disable(0)
 *
 * @return		: none
 */
void GPIO_PCLKControl(GPIO_RegDef_t *pGPIOx, uint8_t en_di){
	if(en_di == ENABLE){
 80001f8:	2901      	cmp	r1, #1
 80001fa:	d02c      	beq.n	8000256 <GPIO_PCLKControl+0x5e>
		}else if(pGPIOx == GPIOK){
			GPIOK_PCLK_EN();
		}

	}else{
		if(pGPIOx == GPIOA){
 80001fc:	4b68      	ldr	r3, [pc, #416]	; (80003a0 <GPIO_PCLKControl+0x1a8>)
 80001fe:	4298      	cmp	r0, r3
 8000200:	f000 808c 	beq.w	800031c <GPIO_PCLKControl+0x124>
			GPIOA_PCLK_DI();
		}else if(pGPIOx == GPIOB){
 8000204:	4b67      	ldr	r3, [pc, #412]	; (80003a4 <GPIO_PCLKControl+0x1ac>)
 8000206:	4298      	cmp	r0, r3
 8000208:	f000 808e 	beq.w	8000328 <GPIO_PCLKControl+0x130>
			GPIOB_PCLK_DI();
		}else if(pGPIOx == GPIOC){
 800020c:	4b66      	ldr	r3, [pc, #408]	; (80003a8 <GPIO_PCLKControl+0x1b0>)
 800020e:	4298      	cmp	r0, r3
 8000210:	f000 8090 	beq.w	8000334 <GPIO_PCLKControl+0x13c>
			GPIOC_PCLK_DI();
		}else if(pGPIOx == GPIOD){
 8000214:	4b65      	ldr	r3, [pc, #404]	; (80003ac <GPIO_PCLKControl+0x1b4>)
 8000216:	4298      	cmp	r0, r3
 8000218:	f000 8092 	beq.w	8000340 <GPIO_PCLKControl+0x148>
			GPIOD_PCLK_DI();
		}else if(pGPIOx == GPIOE){
 800021c:	4b64      	ldr	r3, [pc, #400]	; (80003b0 <GPIO_PCLKControl+0x1b8>)
 800021e:	4298      	cmp	r0, r3
 8000220:	f000 8094 	beq.w	800034c <GPIO_PCLKControl+0x154>
			GPIOE_PCLK_DI();
		}else if(pGPIOx == GPIOF){
 8000224:	4b63      	ldr	r3, [pc, #396]	; (80003b4 <GPIO_PCLKControl+0x1bc>)
 8000226:	4298      	cmp	r0, r3
 8000228:	f000 8096 	beq.w	8000358 <GPIO_PCLKControl+0x160>
			GPIOF_PCLK_DI();
		}else if(pGPIOx == GPIOG){
 800022c:	4b62      	ldr	r3, [pc, #392]	; (80003b8 <GPIO_PCLKControl+0x1c0>)
 800022e:	4298      	cmp	r0, r3
 8000230:	f000 8098 	beq.w	8000364 <GPIO_PCLKControl+0x16c>
			GPIOG_PCLK_DI();
		}else if(pGPIOx == GPIOH){
 8000234:	4b61      	ldr	r3, [pc, #388]	; (80003bc <GPIO_PCLKControl+0x1c4>)
 8000236:	4298      	cmp	r0, r3
 8000238:	f000 809a 	beq.w	8000370 <GPIO_PCLKControl+0x178>
			GPIOH_PCLK_DI();
		}else if(pGPIOx == GPIOI){
 800023c:	4b60      	ldr	r3, [pc, #384]	; (80003c0 <GPIO_PCLKControl+0x1c8>)
 800023e:	4298      	cmp	r0, r3
 8000240:	f000 809c 	beq.w	800037c <GPIO_PCLKControl+0x184>
			GPIOI_PCLK_DI();
		}else if(pGPIOx == GPIOJ){
 8000244:	4b5f      	ldr	r3, [pc, #380]	; (80003c4 <GPIO_PCLKControl+0x1cc>)
 8000246:	4298      	cmp	r0, r3
 8000248:	f000 809e 	beq.w	8000388 <GPIO_PCLKControl+0x190>
			GPIOJ_PCLK_DI();
		}else if(pGPIOx == GPIOK){
 800024c:	4b5e      	ldr	r3, [pc, #376]	; (80003c8 <GPIO_PCLKControl+0x1d0>)
 800024e:	4298      	cmp	r0, r3
 8000250:	f000 80a0 	beq.w	8000394 <GPIO_PCLKControl+0x19c>
			GPIOK_PCLK_DI();
		}
	}

}
 8000254:	4770      	bx	lr
		if(pGPIOx == GPIOA){
 8000256:	4b52      	ldr	r3, [pc, #328]	; (80003a0 <GPIO_PCLKControl+0x1a8>)
 8000258:	4298      	cmp	r0, r3
 800025a:	d023      	beq.n	80002a4 <GPIO_PCLKControl+0xac>
		}else if(pGPIOx == GPIOB){
 800025c:	4b51      	ldr	r3, [pc, #324]	; (80003a4 <GPIO_PCLKControl+0x1ac>)
 800025e:	4298      	cmp	r0, r3
 8000260:	d026      	beq.n	80002b0 <GPIO_PCLKControl+0xb8>
		}else if(pGPIOx == GPIOC){
 8000262:	4b51      	ldr	r3, [pc, #324]	; (80003a8 <GPIO_PCLKControl+0x1b0>)
 8000264:	4298      	cmp	r0, r3
 8000266:	d029      	beq.n	80002bc <GPIO_PCLKControl+0xc4>
		}else if(pGPIOx == GPIOD){
 8000268:	4b50      	ldr	r3, [pc, #320]	; (80003ac <GPIO_PCLKControl+0x1b4>)
 800026a:	4298      	cmp	r0, r3
 800026c:	d02c      	beq.n	80002c8 <GPIO_PCLKControl+0xd0>
		}else if(pGPIOx == GPIOE){
 800026e:	4b50      	ldr	r3, [pc, #320]	; (80003b0 <GPIO_PCLKControl+0x1b8>)
 8000270:	4298      	cmp	r0, r3
 8000272:	d02f      	beq.n	80002d4 <GPIO_PCLKControl+0xdc>
		}else if(pGPIOx == GPIOF){
 8000274:	4b4f      	ldr	r3, [pc, #316]	; (80003b4 <GPIO_PCLKControl+0x1bc>)
 8000276:	4298      	cmp	r0, r3
 8000278:	d032      	beq.n	80002e0 <GPIO_PCLKControl+0xe8>
		}else if(pGPIOx == GPIOG){
 800027a:	4b4f      	ldr	r3, [pc, #316]	; (80003b8 <GPIO_PCLKControl+0x1c0>)
 800027c:	4298      	cmp	r0, r3
 800027e:	d035      	beq.n	80002ec <GPIO_PCLKControl+0xf4>
		}else if(pGPIOx == GPIOH){
 8000280:	4b4e      	ldr	r3, [pc, #312]	; (80003bc <GPIO_PCLKControl+0x1c4>)
 8000282:	4298      	cmp	r0, r3
 8000284:	d038      	beq.n	80002f8 <GPIO_PCLKControl+0x100>
		}else if(pGPIOx == GPIOI){
 8000286:	4b4e      	ldr	r3, [pc, #312]	; (80003c0 <GPIO_PCLKControl+0x1c8>)
 8000288:	4298      	cmp	r0, r3
 800028a:	d03b      	beq.n	8000304 <GPIO_PCLKControl+0x10c>
		}else if(pGPIOx == GPIOJ){
 800028c:	4b4d      	ldr	r3, [pc, #308]	; (80003c4 <GPIO_PCLKControl+0x1cc>)
 800028e:	4298      	cmp	r0, r3
 8000290:	d03e      	beq.n	8000310 <GPIO_PCLKControl+0x118>
		}else if(pGPIOx == GPIOK){
 8000292:	4b4d      	ldr	r3, [pc, #308]	; (80003c8 <GPIO_PCLKControl+0x1d0>)
 8000294:	4298      	cmp	r0, r3
 8000296:	d1dd      	bne.n	8000254 <GPIO_PCLKControl+0x5c>
			GPIOK_PCLK_EN();
 8000298:	4a4c      	ldr	r2, [pc, #304]	; (80003cc <GPIO_PCLKControl+0x1d4>)
 800029a:	6b13      	ldr	r3, [r2, #48]	; 0x30
 800029c:	f443 6380 	orr.w	r3, r3, #1024	; 0x400
 80002a0:	6313      	str	r3, [r2, #48]	; 0x30
 80002a2:	4770      	bx	lr
			GPIOA_PCLK_EN();
 80002a4:	4a49      	ldr	r2, [pc, #292]	; (80003cc <GPIO_PCLKControl+0x1d4>)
 80002a6:	6b13      	ldr	r3, [r2, #48]	; 0x30
 80002a8:	f043 0301 	orr.w	r3, r3, #1
 80002ac:	6313      	str	r3, [r2, #48]	; 0x30
 80002ae:	4770      	bx	lr
			GPIOB_PCLK_EN();
 80002b0:	4a46      	ldr	r2, [pc, #280]	; (80003cc <GPIO_PCLKControl+0x1d4>)
 80002b2:	6b13      	ldr	r3, [r2, #48]	; 0x30
 80002b4:	f043 0302 	orr.w	r3, r3, #2
 80002b8:	6313      	str	r3, [r2, #48]	; 0x30
 80002ba:	4770      	bx	lr
			GPIOC_PCLK_EN();
 80002bc:	4a43      	ldr	r2, [pc, #268]	; (80003cc <GPIO_PCLKControl+0x1d4>)
 80002be:	6b13      	ldr	r3, [r2, #48]	; 0x30
 80002c0:	f043 0304 	orr.w	r3, r3, #4
 80002c4:	6313      	str	r3, [r2, #48]	; 0x30
 80002c6:	4770      	bx	lr
			GPIOD_PCLK_EN();
 80002c8:	4a40      	ldr	r2, [pc, #256]	; (80003cc <GPIO_PCLKControl+0x1d4>)
 80002ca:	6b13      	ldr	r3, [r2, #48]	; 0x30
 80002cc:	f043 0308 	orr.w	r3, r3, #8
 80002d0:	6313      	str	r3, [r2, #48]	; 0x30
 80002d2:	4770      	bx	lr
			GPIOE_PCLK_EN();
 80002d4:	4a3d      	ldr	r2, [pc, #244]	; (80003cc <GPIO_PCLKControl+0x1d4>)
 80002d6:	6b13      	ldr	r3, [r2, #48]	; 0x30
 80002d8:	f043 0310 	orr.w	r3, r3, #16
 80002dc:	6313      	str	r3, [r2, #48]	; 0x30
 80002de:	4770      	bx	lr
			GPIOF_PCLK_EN();
 80002e0:	4a3a      	ldr	r2, [pc, #232]	; (80003cc <GPIO_PCLKControl+0x1d4>)
 80002e2:	6b13      	ldr	r3, [r2, #48]	; 0x30
 80002e4:	f043 0320 	orr.w	r3, r3, #32
 80002e8:	6313      	str	r3, [r2, #48]	; 0x30
 80002ea:	4770      	bx	lr
			GPIOG_PCLK_EN();
 80002ec:	4a37      	ldr	r2, [pc, #220]	; (80003cc <GPIO_PCLKControl+0x1d4>)
 80002ee:	6b13      	ldr	r3, [r2, #48]	; 0x30
 80002f0:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 80002f4:	6313      	str	r3, [r2, #48]	; 0x30
 80002f6:	4770      	bx	lr
			GPIOH_PCLK_EN();
 80002f8:	4a34      	ldr	r2, [pc, #208]	; (80003cc <GPIO_PCLKControl+0x1d4>)
 80002fa:	6b13      	ldr	r3, [r2, #48]	; 0x30
 80002fc:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 8000300:	6313      	str	r3, [r2, #48]	; 0x30
 8000302:	4770      	bx	lr
			GPIOI_PCLK_EN();
 8000304:	4a31      	ldr	r2, [pc, #196]	; (80003cc <GPIO_PCLKControl+0x1d4>)
 8000306:	6b13      	ldr	r3, [r2, #48]	; 0x30
 8000308:	f443 7380 	orr.w	r3, r3, #256	; 0x100
 800030c:	6313      	str	r3, [r2, #48]	; 0x30
 800030e:	4770      	bx	lr
			GPIOJ_PCLK_EN();
 8000310:	4a2e      	ldr	r2, [pc, #184]	; (80003cc <GPIO_PCLKControl+0x1d4>)
 8000312:	6b13      	ldr	r3, [r2, #48]	; 0x30
 8000314:	f443 7300 	orr.w	r3, r3, #512	; 0x200
 8000318:	6313      	str	r3, [r2, #48]	; 0x30
 800031a:	4770      	bx	lr
			GPIOA_PCLK_DI();
 800031c:	4a2b      	ldr	r2, [pc, #172]	; (80003cc <GPIO_PCLKControl+0x1d4>)
 800031e:	6b13      	ldr	r3, [r2, #48]	; 0x30
 8000320:	f023 0301 	bic.w	r3, r3, #1
 8000324:	6313      	str	r3, [r2, #48]	; 0x30
 8000326:	4770      	bx	lr
			GPIOB_PCLK_DI();
 8000328:	4a28      	ldr	r2, [pc, #160]	; (80003cc <GPIO_PCLKControl+0x1d4>)
 800032a:	6b13      	ldr	r3, [r2, #48]	; 0x30
 800032c:	f023 0302 	bic.w	r3, r3, #2
 8000330:	6313      	str	r3, [r2, #48]	; 0x30
 8000332:	4770      	bx	lr
			GPIOC_PCLK_DI();
 8000334:	4a25      	ldr	r2, [pc, #148]	; (80003cc <GPIO_PCLKControl+0x1d4>)
 8000336:	6b13      	ldr	r3, [r2, #48]	; 0x30
 8000338:	f023 0304 	bic.w	r3, r3, #4
 800033c:	6313      	str	r3, [r2, #48]	; 0x30
 800033e:	4770      	bx	lr
			GPIOD_PCLK_DI();
 8000340:	4a22      	ldr	r2, [pc, #136]	; (80003cc <GPIO_PCLKControl+0x1d4>)
 8000342:	6b13      	ldr	r3, [r2, #48]	; 0x30
 8000344:	f023 0308 	bic.w	r3, r3, #8
 8000348:	6313      	str	r3, [r2, #48]	; 0x30
 800034a:	4770      	bx	lr
			GPIOE_PCLK_DI();
 800034c:	4a1f      	ldr	r2, [pc, #124]	; (80003cc <GPIO_PCLKControl+0x1d4>)
 800034e:	6b13      	ldr	r3, [r2, #48]	; 0x30
 8000350:	f023 0310 	bic.w	r3, r3, #16
 8000354:	6313      	str	r3, [r2, #48]	; 0x30
 8000356:	4770      	bx	lr
			GPIOF_PCLK_DI();
 8000358:	4a1c      	ldr	r2, [pc, #112]	; (80003cc <GPIO_PCLKControl+0x1d4>)
 800035a:	6b13      	ldr	r3, [r2, #48]	; 0x30
 800035c:	f023 0320 	bic.w	r3, r3, #32
 8000360:	6313      	str	r3, [r2, #48]	; 0x30
 8000362:	4770      	bx	lr
			GPIOG_PCLK_DI();
 8000364:	4a19      	ldr	r2, [pc, #100]	; (80003cc <GPIO_PCLKControl+0x1d4>)
 8000366:	6b13      	ldr	r3, [r2, #48]	; 0x30
 8000368:	f023 0340 	bic.w	r3, r3, #64	; 0x40
 800036c:	6313      	str	r3, [r2, #48]	; 0x30
 800036e:	4770      	bx	lr
			GPIOH_PCLK_DI();
 8000370:	4a16      	ldr	r2, [pc, #88]	; (80003cc <GPIO_PCLKControl+0x1d4>)
 8000372:	6b13      	ldr	r3, [r2, #48]	; 0x30
 8000374:	f023 0380 	bic.w	r3, r3, #128	; 0x80
 8000378:	6313      	str	r3, [r2, #48]	; 0x30
 800037a:	4770      	bx	lr
			GPIOI_PCLK_DI();
 800037c:	4a13      	ldr	r2, [pc, #76]	; (80003cc <GPIO_PCLKControl+0x1d4>)
 800037e:	6b13      	ldr	r3, [r2, #48]	; 0x30
 8000380:	f423 7380 	bic.w	r3, r3, #256	; 0x100
 8000384:	6313      	str	r3, [r2, #48]	; 0x30
 8000386:	4770      	bx	lr
			GPIOJ_PCLK_DI();
 8000388:	4a10      	ldr	r2, [pc, #64]	; (80003cc <GPIO_PCLKControl+0x1d4>)
 800038a:	6b13      	ldr	r3, [r2, #48]	; 0x30
 800038c:	f423 7300 	bic.w	r3, r3, #512	; 0x200
 8000390:	6313      	str	r3, [r2, #48]	; 0x30
 8000392:	4770      	bx	lr
			GPIOK_PCLK_DI();
 8000394:	4a0d      	ldr	r2, [pc, #52]	; (80003cc <GPIO_PCLKControl+0x1d4>)
 8000396:	6b13      	ldr	r3, [r2, #48]	; 0x30
 8000398:	f423 6380 	bic.w	r3, r3, #1024	; 0x400
 800039c:	6313      	str	r3, [r2, #48]	; 0x30
}
 800039e:	e759      	b.n	8000254 <GPIO_PCLKControl+0x5c>
 80003a0:	40020000 	.word	0x40020000
 80003a4:	40020400 	.word	0x40020400
 80003a8:	40020800 	.word	0x40020800
 80003ac:	40020c00 	.word	0x40020c00
 80003b0:	40021000 	.word	0x40021000
 80003b4:	40021400 	.word	0x40021400
 80003b8:	40021800 	.word	0x40021800
 80003bc:	40021c00 	.word	0x40021c00
 80003c0:	40022000 	.word	0x40022000
 80003c4:	40022400 	.word	0x40022400
 80003c8:	40022800 	.word	0x40022800
 80003cc:	40023800 	.word	0x40023800

080003d0 <GPIO_Init>:
 *
 * @param[in]	: pointer to the user create handle structure
 *
 * @return		: none
 */
void GPIO_Init(GPIO_Handle_t *pGPIOHandle){
 80003d0:	b570      	push	{r4, r5, r6, lr}
 80003d2:	4604      	mov	r4, r0

	/* temporary storage*/
	uint32_t temp = 0;

	//enable the PCLK
	GPIO_PCLKControl(pGPIOHandle->pGPIOx, EN);
 80003d4:	2101      	movs	r1, #1
 80003d6:	6800      	ldr	r0, [r0, #0]
 80003d8:	f7ff ff0e 	bl	80001f8 <GPIO_PCLKControl>

	/*initialize mode register*/
	if(pGPIOHandle->GPIO_PinConfig.GPIO_PinMode <= GPIO_MODE_ANALOG){
 80003dc:	7963      	ldrb	r3, [r4, #5]
 80003de:	2b03      	cmp	r3, #3
 80003e0:	d840      	bhi.n	8000464 <GPIO_Init+0x94>
		temp = (pGPIOHandle->GPIO_PinConfig.GPIO_PinMode << (2 * pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber));
 80003e2:	7922      	ldrb	r2, [r4, #4]
 80003e4:	0052      	lsls	r2, r2, #1
 80003e6:	4093      	lsls	r3, r2
		pGPIOHandle->pGPIOx->MODER &= ~(0x3 << (2 * pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber));						//clearing
 80003e8:	6825      	ldr	r5, [r4, #0]
 80003ea:	6829      	ldr	r1, [r5, #0]
 80003ec:	2003      	movs	r0, #3
 80003ee:	fa00 f202 	lsl.w	r2, r0, r2
 80003f2:	ea21 0202 	bic.w	r2, r1, r2
 80003f6:	602a      	str	r2, [r5, #0]
		pGPIOHandle->pGPIOx->MODER |= temp;
 80003f8:	6821      	ldr	r1, [r4, #0]
 80003fa:	680a      	ldr	r2, [r1, #0]
 80003fc:	4313      	orrs	r3, r2
 80003fe:	600b      	str	r3, [r1, #0]
		// enable the exti interrupt delivery using interrupt mask register
		EXTI->EXTI_IMR |= (1 << pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber);
	}

	/*initialize speed register*/
	temp = (pGPIOHandle->GPIO_PinConfig.GPIO_PinSpeed << (2 * pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber));
 8000400:	79a1      	ldrb	r1, [r4, #6]
 8000402:	7923      	ldrb	r3, [r4, #4]
 8000404:	005b      	lsls	r3, r3, #1
 8000406:	4099      	lsls	r1, r3
	pGPIOHandle->pGPIOx->OSPEEDR &= ~(0x3 << (2 * pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber));
 8000408:	6825      	ldr	r5, [r4, #0]
 800040a:	68a8      	ldr	r0, [r5, #8]
 800040c:	2203      	movs	r2, #3
 800040e:	fa02 f303 	lsl.w	r3, r2, r3
 8000412:	ea20 0303 	bic.w	r3, r0, r3
 8000416:	60ab      	str	r3, [r5, #8]
	pGPIOHandle->pGPIOx->OSPEEDR |= temp;
 8000418:	6820      	ldr	r0, [r4, #0]
 800041a:	6883      	ldr	r3, [r0, #8]
 800041c:	430b      	orrs	r3, r1
 800041e:	6083      	str	r3, [r0, #8]
	temp = 0;

	/*initialize pull up pull down register*/
	temp = (pGPIOHandle->GPIO_PinConfig.GPIO_PinPuPdControl << (2 * pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber));
 8000420:	79e1      	ldrb	r1, [r4, #7]
 8000422:	7923      	ldrb	r3, [r4, #4]
 8000424:	005b      	lsls	r3, r3, #1
 8000426:	4099      	lsls	r1, r3
	pGPIOHandle->pGPIOx->PUPDR &= ~(0x3 << (2 * pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber));
 8000428:	6825      	ldr	r5, [r4, #0]
 800042a:	68e8      	ldr	r0, [r5, #12]
 800042c:	fa02 f303 	lsl.w	r3, r2, r3
 8000430:	ea20 0303 	bic.w	r3, r0, r3
 8000434:	60eb      	str	r3, [r5, #12]
	pGPIOHandle->pGPIOx->PUPDR |= temp;
 8000436:	6820      	ldr	r0, [r4, #0]
 8000438:	68c3      	ldr	r3, [r0, #12]
 800043a:	430b      	orrs	r3, r1
 800043c:	60c3      	str	r3, [r0, #12]
	temp = 0;

	/*initialize output type register*/
	temp = (pGPIOHandle->GPIO_PinConfig.GPIO_PinOPType << (pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber));
 800043e:	7a23      	ldrb	r3, [r4, #8]
 8000440:	7925      	ldrb	r5, [r4, #4]
 8000442:	fa03 f105 	lsl.w	r1, r3, r5
	pGPIOHandle->pGPIOx->OTYPER &= ~(0x3 << pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber);
 8000446:	6820      	ldr	r0, [r4, #0]
 8000448:	6843      	ldr	r3, [r0, #4]
 800044a:	40aa      	lsls	r2, r5
 800044c:	ea23 0202 	bic.w	r2, r3, r2
 8000450:	6042      	str	r2, [r0, #4]
	pGPIOHandle->pGPIOx->OTYPER |= temp;
 8000452:	6822      	ldr	r2, [r4, #0]
 8000454:	6853      	ldr	r3, [r2, #4]
 8000456:	430b      	orrs	r3, r1
 8000458:	6053      	str	r3, [r2, #4]
	temp = 0;

	/*initialize Alt FN register*/
	if(pGPIOHandle->GPIO_PinConfig.GPIO_PinMode == GPIO_MODE_ALTFN){
 800045a:	7963      	ldrb	r3, [r4, #5]
 800045c:	2b02      	cmp	r3, #2
 800045e:	f000 808e 	beq.w	800057e <GPIO_Init+0x1ae>
		temp1 = pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber / 8;
		temp2 = pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber % 8;
		pGPIOHandle->pGPIOx->AFR[temp1] &= ~(0xF << (4 * temp2));
		pGPIOHandle->pGPIOx->AFR[temp1] |= (pGPIOHandle->GPIO_PinConfig.GPIO_PinAltFunMode << (4 * temp2));
	}
}
 8000462:	bd70      	pop	{r4, r5, r6, pc}
		if(pGPIOHandle->GPIO_PinConfig.GPIO_PinMode == GPIO_MODE_IT_FL){
 8000464:	2b04      	cmp	r3, #4
 8000466:	d011      	beq.n	800048c <GPIO_Init+0xbc>
		}else if(pGPIOHandle->GPIO_PinConfig.GPIO_PinMode == GPIO_MODE_IT_RI){
 8000468:	2b05      	cmp	r3, #5
 800046a:	d04f      	beq.n	800050c <GPIO_Init+0x13c>
		}else if(pGPIOHandle->GPIO_PinConfig.GPIO_PinMode == GPIO_MODE_IT_RI_FL){
 800046c:	2b06      	cmp	r3, #6
 800046e:	d11b      	bne.n	80004a8 <GPIO_Init+0xd8>
			EXTI->EXTI_FTSR |= (1 << pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber);
 8000470:	4b4f      	ldr	r3, [pc, #316]	; (80005b0 <GPIO_Init+0x1e0>)
 8000472:	68d9      	ldr	r1, [r3, #12]
 8000474:	7920      	ldrb	r0, [r4, #4]
 8000476:	2201      	movs	r2, #1
 8000478:	fa02 f000 	lsl.w	r0, r2, r0
 800047c:	4301      	orrs	r1, r0
 800047e:	60d9      	str	r1, [r3, #12]
			EXTI->EXTI_RTSR |= (1 << pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber);
 8000480:	6899      	ldr	r1, [r3, #8]
 8000482:	7920      	ldrb	r0, [r4, #4]
 8000484:	4082      	lsls	r2, r0
 8000486:	430a      	orrs	r2, r1
 8000488:	609a      	str	r2, [r3, #8]
 800048a:	e00d      	b.n	80004a8 <GPIO_Init+0xd8>
			EXTI->EXTI_FTSR |= (1 << pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber);
 800048c:	4b48      	ldr	r3, [pc, #288]	; (80005b0 <GPIO_Init+0x1e0>)
 800048e:	68d9      	ldr	r1, [r3, #12]
 8000490:	7920      	ldrb	r0, [r4, #4]
 8000492:	2201      	movs	r2, #1
 8000494:	fa02 f000 	lsl.w	r0, r2, r0
 8000498:	4301      	orrs	r1, r0
 800049a:	60d9      	str	r1, [r3, #12]
			EXTI->EXTI_RTSR &= ~(1 << pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber);
 800049c:	6899      	ldr	r1, [r3, #8]
 800049e:	7920      	ldrb	r0, [r4, #4]
 80004a0:	4082      	lsls	r2, r0
 80004a2:	ea21 0202 	bic.w	r2, r1, r2
 80004a6:	609a      	str	r2, [r3, #8]
		uint8_t temp1 = pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber / 4;
 80004a8:	7922      	ldrb	r2, [r4, #4]
 80004aa:	0896      	lsrs	r6, r2, #2
		uint8_t temp2 = pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber % 4;
 80004ac:	f002 0203 	and.w	r2, r2, #3
		uint8_t portcode = GPIO_BASE_TO_CODE(pGPIOHandle->pGPIOx);
 80004b0:	6823      	ldr	r3, [r4, #0]
 80004b2:	4940      	ldr	r1, [pc, #256]	; (80005b4 <GPIO_Init+0x1e4>)
 80004b4:	428b      	cmp	r3, r1
 80004b6:	d03a      	beq.n	800052e <GPIO_Init+0x15e>
 80004b8:	f501 6180 	add.w	r1, r1, #1024	; 0x400
 80004bc:	428b      	cmp	r3, r1
 80004be:	d04c      	beq.n	800055a <GPIO_Init+0x18a>
 80004c0:	f501 6180 	add.w	r1, r1, #1024	; 0x400
 80004c4:	428b      	cmp	r3, r1
 80004c6:	d04a      	beq.n	800055e <GPIO_Init+0x18e>
 80004c8:	f501 6180 	add.w	r1, r1, #1024	; 0x400
 80004cc:	428b      	cmp	r3, r1
 80004ce:	d048      	beq.n	8000562 <GPIO_Init+0x192>
 80004d0:	f501 6180 	add.w	r1, r1, #1024	; 0x400
 80004d4:	428b      	cmp	r3, r1
 80004d6:	d046      	beq.n	8000566 <GPIO_Init+0x196>
 80004d8:	f501 6180 	add.w	r1, r1, #1024	; 0x400
 80004dc:	428b      	cmp	r3, r1
 80004de:	d044      	beq.n	800056a <GPIO_Init+0x19a>
 80004e0:	f501 6180 	add.w	r1, r1, #1024	; 0x400
 80004e4:	428b      	cmp	r3, r1
 80004e6:	d042      	beq.n	800056e <GPIO_Init+0x19e>
 80004e8:	f501 6180 	add.w	r1, r1, #1024	; 0x400
 80004ec:	428b      	cmp	r3, r1
 80004ee:	d040      	beq.n	8000572 <GPIO_Init+0x1a2>
 80004f0:	f501 6180 	add.w	r1, r1, #1024	; 0x400
 80004f4:	428b      	cmp	r3, r1
 80004f6:	d03e      	beq.n	8000576 <GPIO_Init+0x1a6>
 80004f8:	f501 6180 	add.w	r1, r1, #1024	; 0x400
 80004fc:	428b      	cmp	r3, r1
 80004fe:	d03c      	beq.n	800057a <GPIO_Init+0x1aa>
 8000500:	f501 6180 	add.w	r1, r1, #1024	; 0x400
 8000504:	428b      	cmp	r3, r1
 8000506:	d010      	beq.n	800052a <GPIO_Init+0x15a>
 8000508:	2000      	movs	r0, #0
 800050a:	e011      	b.n	8000530 <GPIO_Init+0x160>
			EXTI->EXTI_RTSR |= (1 << pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber);
 800050c:	4b28      	ldr	r3, [pc, #160]	; (80005b0 <GPIO_Init+0x1e0>)
 800050e:	6899      	ldr	r1, [r3, #8]
 8000510:	7920      	ldrb	r0, [r4, #4]
 8000512:	2201      	movs	r2, #1
 8000514:	fa02 f000 	lsl.w	r0, r2, r0
 8000518:	4301      	orrs	r1, r0
 800051a:	6099      	str	r1, [r3, #8]
			EXTI->EXTI_FTSR &= ~(1 << pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber);
 800051c:	68d9      	ldr	r1, [r3, #12]
 800051e:	7920      	ldrb	r0, [r4, #4]
 8000520:	4082      	lsls	r2, r0
 8000522:	ea21 0202 	bic.w	r2, r1, r2
 8000526:	60da      	str	r2, [r3, #12]
 8000528:	e7be      	b.n	80004a8 <GPIO_Init+0xd8>
		uint8_t portcode = GPIO_BASE_TO_CODE(pGPIOHandle->pGPIOx);
 800052a:	200a      	movs	r0, #10
 800052c:	e000      	b.n	8000530 <GPIO_Init+0x160>
 800052e:	2000      	movs	r0, #0
		SYSCFG_PCLK_EN();
 8000530:	4d21      	ldr	r5, [pc, #132]	; (80005b8 <GPIO_Init+0x1e8>)
 8000532:	6c69      	ldr	r1, [r5, #68]	; 0x44
 8000534:	f441 4180 	orr.w	r1, r1, #16384	; 0x4000
 8000538:	6469      	str	r1, [r5, #68]	; 0x44
		SYSCFG->SYSCFG_EXTICR[temp1] = portcode << (temp2 * 4);
 800053a:	0092      	lsls	r2, r2, #2
 800053c:	fa00 f202 	lsl.w	r2, r0, r2
 8000540:	1cb3      	adds	r3, r6, #2
 8000542:	491e      	ldr	r1, [pc, #120]	; (80005bc <GPIO_Init+0x1ec>)
 8000544:	f841 2023 	str.w	r2, [r1, r3, lsl #2]
		EXTI->EXTI_IMR |= (1 << pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber);
 8000548:	f501 6180 	add.w	r1, r1, #1024	; 0x400
 800054c:	680b      	ldr	r3, [r1, #0]
 800054e:	7920      	ldrb	r0, [r4, #4]
 8000550:	2201      	movs	r2, #1
 8000552:	4082      	lsls	r2, r0
 8000554:	4313      	orrs	r3, r2
 8000556:	600b      	str	r3, [r1, #0]
 8000558:	e752      	b.n	8000400 <GPIO_Init+0x30>
		uint8_t portcode = GPIO_BASE_TO_CODE(pGPIOHandle->pGPIOx);
 800055a:	2001      	movs	r0, #1
 800055c:	e7e8      	b.n	8000530 <GPIO_Init+0x160>
 800055e:	2002      	movs	r0, #2
 8000560:	e7e6      	b.n	8000530 <GPIO_Init+0x160>
 8000562:	2003      	movs	r0, #3
 8000564:	e7e4      	b.n	8000530 <GPIO_Init+0x160>
 8000566:	2004      	movs	r0, #4
 8000568:	e7e2      	b.n	8000530 <GPIO_Init+0x160>
 800056a:	2005      	movs	r0, #5
 800056c:	e7e0      	b.n	8000530 <GPIO_Init+0x160>
 800056e:	2006      	movs	r0, #6
 8000570:	e7de      	b.n	8000530 <GPIO_Init+0x160>
 8000572:	2007      	movs	r0, #7
 8000574:	e7dc      	b.n	8000530 <GPIO_Init+0x160>
 8000576:	2008      	movs	r0, #8
 8000578:	e7da      	b.n	8000530 <GPIO_Init+0x160>
 800057a:	2009      	movs	r0, #9
 800057c:	e7d8      	b.n	8000530 <GPIO_Init+0x160>
		temp1 = pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber / 8;
 800057e:	7923      	ldrb	r3, [r4, #4]
 8000580:	08da      	lsrs	r2, r3, #3
		temp2 = pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber % 8;
 8000582:	f003 0307 	and.w	r3, r3, #7
		pGPIOHandle->pGPIOx->AFR[temp1] &= ~(0xF << (4 * temp2));
 8000586:	6825      	ldr	r5, [r4, #0]
 8000588:	3208      	adds	r2, #8
 800058a:	f855 1022 	ldr.w	r1, [r5, r2, lsl #2]
 800058e:	009b      	lsls	r3, r3, #2
 8000590:	200f      	movs	r0, #15
 8000592:	4098      	lsls	r0, r3
 8000594:	ea21 0100 	bic.w	r1, r1, r0
 8000598:	f845 1022 	str.w	r1, [r5, r2, lsl #2]
		pGPIOHandle->pGPIOx->AFR[temp1] |= (pGPIOHandle->GPIO_PinConfig.GPIO_PinAltFunMode << (4 * temp2));
 800059c:	6825      	ldr	r5, [r4, #0]
 800059e:	f855 1022 	ldr.w	r1, [r5, r2, lsl #2]
 80005a2:	7a60      	ldrb	r0, [r4, #9]
 80005a4:	fa00 f303 	lsl.w	r3, r0, r3
 80005a8:	430b      	orrs	r3, r1
 80005aa:	f845 3022 	str.w	r3, [r5, r2, lsl #2]
}
 80005ae:	e758      	b.n	8000462 <GPIO_Init+0x92>
 80005b0:	40013c00 	.word	0x40013c00
 80005b4:	40020000 	.word	0x40020000
 80005b8:	40023800 	.word	0x40023800
 80005bc:	40013800 	.word	0x40013800

080005c0 <GPIO_ReadFromInputPin>:
 *
 * @return		: state of specified GPIOx pin
 */
uint8_t GPIO_ReadFromInputPin(GPIO_RegDef_t *pGPIOx, uint8_t PinNumber){
	uint8_t value;
	value = (uint8_t)((pGPIOx->IDR >> PinNumber) & 0x00000001);
 80005c0:	6900      	ldr	r0, [r0, #16]
 80005c2:	40c8      	lsrs	r0, r1
	return value;
}
 80005c4:	f000 0001 	and.w	r0, r0, #1
 80005c8:	4770      	bx	lr

080005ca <GPIO_WriteToOutputPin>:
 * @param[in]	: data to write to GPIOx pin
 *
 * @return		: none
 */
void GPIO_WriteToOutputPin(GPIO_RegDef_t *pGPIOx, uint8_t PinNumber, uint8_t Value){
	if(Value == GPIO_PIN_SET){
 80005ca:	2a01      	cmp	r2, #1
 80005cc:	d007      	beq.n	80005de <GPIO_WriteToOutputPin+0x14>
		pGPIOx->ODR |= ( 1 << PinNumber);
	}else{
		pGPIOx->ODR &= ~( 1 << PinNumber);
 80005ce:	6943      	ldr	r3, [r0, #20]
 80005d0:	2201      	movs	r2, #1
 80005d2:	fa02 f101 	lsl.w	r1, r2, r1
 80005d6:	ea23 0101 	bic.w	r1, r3, r1
 80005da:	6141      	str	r1, [r0, #20]
	}
}
 80005dc:	4770      	bx	lr
		pGPIOx->ODR |= ( 1 << PinNumber);
 80005de:	6943      	ldr	r3, [r0, #20]
 80005e0:	fa02 f101 	lsl.w	r1, r2, r1
 80005e4:	4319      	orrs	r1, r3
 80005e6:	6141      	str	r1, [r0, #20]
 80005e8:	4770      	bx	lr
	...

080005ec <LCM1602a_Hang_Busy_Flag>:
 * @brief		: Hangs until the Data 7 pin returns the LOW value (Busy Flag)
 *
 *
 * @return		: none
 */
void LCM1602a_Hang_Busy_Flag(){
 80005ec:	b538      	push	{r3, r4, r5, lr}

	uint32_t temp = 0;																	/* temporary variable to hold register value*/

	temp = (GPIO_MODE_IN << (2 * pgpioD7Busy->GPIO_PinConfig.GPIO_PinNumber));			/*first set D7 to input*/
	pgpioD7Busy->pGPIOx->MODER &= ~(0x3 << (2 * pgpioD7Busy->GPIO_PinConfig.GPIO_PinNumber));
 80005ee:	4b1c      	ldr	r3, [pc, #112]	; (8000660 <LCM1602a_Hang_Busy_Flag+0x74>)
 80005f0:	681b      	ldr	r3, [r3, #0]
 80005f2:	681c      	ldr	r4, [r3, #0]
 80005f4:	6822      	ldr	r2, [r4, #0]
 80005f6:	7919      	ldrb	r1, [r3, #4]
 80005f8:	0048      	lsls	r0, r1, #1
 80005fa:	2103      	movs	r1, #3
 80005fc:	4081      	lsls	r1, r0
 80005fe:	ea22 0201 	bic.w	r2, r2, r1
 8000602:	6022      	str	r2, [r4, #0]
	pgpioD7Busy->pGPIOx->MODER |= temp;
 8000604:	681b      	ldr	r3, [r3, #0]
 8000606:	681a      	ldr	r2, [r3, #0]
 8000608:	601a      	str	r2, [r3, #0]

	while(1){																			/*hang till Busy flag is Low*/
																						/*set RW and E*/
		GPIO_WriteToOutputPin(gpioControl[1].pGPIOx, gpioControl[1].GPIO_PinConfig.GPIO_PinNumber, HIGH);
 800060a:	4c16      	ldr	r4, [pc, #88]	; (8000664 <LCM1602a_Hang_Busy_Flag+0x78>)
 800060c:	2201      	movs	r2, #1
 800060e:	7c21      	ldrb	r1, [r4, #16]
 8000610:	68e0      	ldr	r0, [r4, #12]
 8000612:	f7ff ffda 	bl	80005ca <GPIO_WriteToOutputPin>
		GPIO_WriteToOutputPin(gpioControl[2].pGPIOx, gpioControl[2].GPIO_PinConfig.GPIO_PinNumber, HIGH);
 8000616:	2201      	movs	r2, #1
 8000618:	7f21      	ldrb	r1, [r4, #28]
 800061a:	69a0      	ldr	r0, [r4, #24]
 800061c:	f7ff ffd5 	bl	80005ca <GPIO_WriteToOutputPin>

																						/*read Data 7 pin, if 0 set E back to LOW and stop hanging*/
		if(GPIO_ReadFromInputPin(pgpioD7Busy->pGPIOx, pgpioD7Busy->GPIO_PinConfig.GPIO_PinNumber) == 0){
 8000620:	4b0f      	ldr	r3, [pc, #60]	; (8000660 <LCM1602a_Hang_Busy_Flag+0x74>)
 8000622:	681b      	ldr	r3, [r3, #0]
 8000624:	7919      	ldrb	r1, [r3, #4]
 8000626:	6818      	ldr	r0, [r3, #0]
 8000628:	f7ff ffca 	bl	80005c0 <GPIO_ReadFromInputPin>
 800062c:	2800      	cmp	r0, #0
 800062e:	d1ec      	bne.n	800060a <LCM1602a_Hang_Busy_Flag+0x1e>
			GPIO_WriteToOutputPin(gpioControl[2].pGPIOx, gpioControl[2].GPIO_PinConfig.GPIO_PinNumber, LOW);
 8000630:	2200      	movs	r2, #0
 8000632:	7f21      	ldrb	r1, [r4, #28]
 8000634:	69a0      	ldr	r0, [r4, #24]
 8000636:	f7ff ffc8 	bl	80005ca <GPIO_WriteToOutputPin>
			break;
		}
	}

	temp = (GPIO_MODE_OUT << (2 * pgpioD7Busy->GPIO_PinConfig.GPIO_PinNumber));			/*set D7 back to output*/
 800063a:	4b09      	ldr	r3, [pc, #36]	; (8000660 <LCM1602a_Hang_Busy_Flag+0x74>)
 800063c:	6819      	ldr	r1, [r3, #0]
 800063e:	790b      	ldrb	r3, [r1, #4]
 8000640:	005b      	lsls	r3, r3, #1
 8000642:	2201      	movs	r2, #1
 8000644:	409a      	lsls	r2, r3
	pgpioD7Busy->pGPIOx->MODER &= ~(0x3 << (2 * pgpioD7Busy->GPIO_PinConfig.GPIO_PinNumber));
 8000646:	680d      	ldr	r5, [r1, #0]
 8000648:	6828      	ldr	r0, [r5, #0]
 800064a:	2403      	movs	r4, #3
 800064c:	fa04 f303 	lsl.w	r3, r4, r3
 8000650:	ea20 0303 	bic.w	r3, r0, r3
 8000654:	602b      	str	r3, [r5, #0]
	pgpioD7Busy->pGPIOx->MODER |= temp;
 8000656:	6809      	ldr	r1, [r1, #0]
 8000658:	680b      	ldr	r3, [r1, #0]
 800065a:	4313      	orrs	r3, r2
 800065c:	600b      	str	r3, [r1, #0]

}
 800065e:	bd38      	pop	{r3, r4, r5, pc}
 8000660:	200000a0 	.word	0x200000a0
 8000664:	2000001c 	.word	0x2000001c

08000668 <LCM1602a_Data8_GPIOInit>:
void LCM1602a_Data8_GPIOInit(GPIO_RegDef_t *pDataPorts[8], uint8_t dataPins[8], GPIO_RegDef_t *pControlPorts[3], uint8_t controlPins[3]){
 8000668:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 800066c:	4606      	mov	r6, r0
 800066e:	460d      	mov	r5, r1
 8000670:	4691      	mov	r9, r2
 8000672:	4698      	mov	r8, r3
	for(int i = 0; i < DATA_8; i++){
 8000674:	2400      	movs	r4, #0
 8000676:	e015      	b.n	80006a4 <LCM1602a_Data8_GPIOInit+0x3c>
		memset(&gpioData[i], 0, sizeof(gpioData[i])); 									/*set member elements to zero*/
 8000678:	491b      	ldr	r1, [pc, #108]	; (80006e8 <LCM1602a_Data8_GPIOInit+0x80>)
 800067a:	0063      	lsls	r3, r4, #1
 800067c:	4423      	add	r3, r4
 800067e:	009a      	lsls	r2, r3, #2
 8000680:	1888      	adds	r0, r1, r2
 8000682:	2300      	movs	r3, #0
 8000684:	508b      	str	r3, [r1, r2]
 8000686:	6043      	str	r3, [r0, #4]
 8000688:	6083      	str	r3, [r0, #8]
		gpioData[i].pGPIOx = pDataPorts[i];												/*set data port*/
 800068a:	f856 7024 	ldr.w	r7, [r6, r4, lsl #2]
 800068e:	508f      	str	r7, [r1, r2]
		gpioData[i].GPIO_PinConfig.GPIO_PinNumber = dataPins[i];						/*set data pin*/
 8000690:	5d2a      	ldrb	r2, [r5, r4]
 8000692:	7102      	strb	r2, [r0, #4]
		gpioData[i].GPIO_PinConfig.GPIO_PinMode = GPIO_MODE_OUT;						/*set pin mode*/
 8000694:	2201      	movs	r2, #1
 8000696:	7142      	strb	r2, [r0, #5]
		gpioData[i].GPIO_PinConfig.GPIO_PinSpeed = GPIO_SPEED_LOW;						/*set pin speed*/
 8000698:	7183      	strb	r3, [r0, #6]
		gpioData[i].GPIO_PinConfig.GPIO_PinOPType = GPIO_OP_TYPE_PP;					/*set pin type*/
 800069a:	7203      	strb	r3, [r0, #8]
		gpioData[i].GPIO_PinConfig.GPIO_PinPuPdControl = GPIO_NO_PUPD;					/*set pull up, pull down control*/
 800069c:	71c3      	strb	r3, [r0, #7]
		GPIO_Init(&gpioData[i]);														/*initialize the GPIO handle structue*/
 800069e:	f7ff fe97 	bl	80003d0 <GPIO_Init>
	for(int i = 0; i < DATA_8; i++){
 80006a2:	3401      	adds	r4, #1
 80006a4:	2c07      	cmp	r4, #7
 80006a6:	dde7      	ble.n	8000678 <LCM1602a_Data8_GPIOInit+0x10>
	pgpioD7Busy = &gpioData[7];															/*pointer to Data 7 pin handle to simplify reading of busy flag*/
 80006a8:	4b10      	ldr	r3, [pc, #64]	; (80006ec <LCM1602a_Data8_GPIOInit+0x84>)
 80006aa:	4a11      	ldr	r2, [pc, #68]	; (80006f0 <LCM1602a_Data8_GPIOInit+0x88>)
 80006ac:	601a      	str	r2, [r3, #0]
	for(int i = 0; i < CONTROL_PIN_COUNT; i++){
 80006ae:	2400      	movs	r4, #0
 80006b0:	e016      	b.n	80006e0 <LCM1602a_Data8_GPIOInit+0x78>
		memset(&gpioControl[i], 0, sizeof(gpioControl[i])); 							/*set member elements to zero*/
 80006b2:	4910      	ldr	r1, [pc, #64]	; (80006f4 <LCM1602a_Data8_GPIOInit+0x8c>)
 80006b4:	0063      	lsls	r3, r4, #1
 80006b6:	4423      	add	r3, r4
 80006b8:	009a      	lsls	r2, r3, #2
 80006ba:	1888      	adds	r0, r1, r2
 80006bc:	2300      	movs	r3, #0
 80006be:	508b      	str	r3, [r1, r2]
 80006c0:	6043      	str	r3, [r0, #4]
 80006c2:	6083      	str	r3, [r0, #8]
		gpioControl[i].pGPIOx = pControlPorts[i];										/*set control port*/
 80006c4:	f859 5024 	ldr.w	r5, [r9, r4, lsl #2]
 80006c8:	508d      	str	r5, [r1, r2]
		gpioControl[i].GPIO_PinConfig.GPIO_PinNumber = controlPins[i];					/*set control pin*/
 80006ca:	f818 2004 	ldrb.w	r2, [r8, r4]
 80006ce:	7102      	strb	r2, [r0, #4]
		gpioControl[i].GPIO_PinConfig.GPIO_PinMode = GPIO_MODE_OUT;						/*set pin mode*/
 80006d0:	2201      	movs	r2, #1
 80006d2:	7142      	strb	r2, [r0, #5]
		gpioControl[i].GPIO_PinConfig.GPIO_PinSpeed = GPIO_SPEED_LOW;					/*set pin speed*/
 80006d4:	7183      	strb	r3, [r0, #6]
		gpioControl[i].GPIO_PinConfig.GPIO_PinOPType = GPIO_OP_TYPE_PP;					/*set pin type*/
 80006d6:	7203      	strb	r3, [r0, #8]
		gpioControl[i].GPIO_PinConfig.GPIO_PinPuPdControl = GPIO_NO_PUPD;				/*set pull up, pull down control*/
 80006d8:	71c3      	strb	r3, [r0, #7]
		GPIO_Init(&gpioControl[i]);														/*initialize the GPIO handle structue*/
 80006da:	f7ff fe79 	bl	80003d0 <GPIO_Init>
	for(int i = 0; i < CONTROL_PIN_COUNT; i++){
 80006de:	3401      	adds	r4, #1
 80006e0:	2c02      	cmp	r4, #2
 80006e2:	dde6      	ble.n	80006b2 <LCM1602a_Data8_GPIOInit+0x4a>
}
 80006e4:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 80006e8:	20000040 	.word	0x20000040
 80006ec:	200000a0 	.word	0x200000a0
 80006f0:	20000094 	.word	0x20000094
 80006f4:	2000001c 	.word	0x2000001c

080006f8 <LCM1602a_Write8_Data>:
void LCM1602a_Write8_Data(uint8_t dataValues, uint8_t RS, uint8_t RW){
 80006f8:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 80006fc:	4606      	mov	r6, r0
 80006fe:	4688      	mov	r8, r1
 8000700:	4617      	mov	r7, r2
	LCM1602a_Hang_Busy_Flag();															/*hang until busy flag is reset*/
 8000702:	f7ff ff73 	bl	80005ec <LCM1602a_Hang_Busy_Flag>
	for(int i = 0; i < DATA_8; i++){													/*write to data lines*/
 8000706:	2400      	movs	r4, #0
 8000708:	e00d      	b.n	8000726 <LCM1602a_Write8_Data+0x2e>
		GPIO_WriteToOutputPin(gpioData[i].pGPIOx, gpioData[i].GPIO_PinConfig.GPIO_PinNumber, ((dataValues >> i) & 1));
 800070a:	fa46 f204 	asr.w	r2, r6, r4
 800070e:	4d17      	ldr	r5, [pc, #92]	; (800076c <LCM1602a_Write8_Data+0x74>)
 8000710:	0063      	lsls	r3, r4, #1
 8000712:	4423      	add	r3, r4
 8000714:	0098      	lsls	r0, r3, #2
 8000716:	182b      	adds	r3, r5, r0
 8000718:	f002 0201 	and.w	r2, r2, #1
 800071c:	7919      	ldrb	r1, [r3, #4]
 800071e:	5828      	ldr	r0, [r5, r0]
 8000720:	f7ff ff53 	bl	80005ca <GPIO_WriteToOutputPin>
	for(int i = 0; i < DATA_8; i++){													/*write to data lines*/
 8000724:	3401      	adds	r4, #1
 8000726:	2c07      	cmp	r4, #7
 8000728:	ddef      	ble.n	800070a <LCM1602a_Write8_Data+0x12>
	GPIO_WriteToOutputPin(gpioControl[0].pGPIOx, gpioControl[0].GPIO_PinConfig.GPIO_PinNumber, RS);
 800072a:	4c11      	ldr	r4, [pc, #68]	; (8000770 <LCM1602a_Write8_Data+0x78>)
 800072c:	4642      	mov	r2, r8
 800072e:	7921      	ldrb	r1, [r4, #4]
 8000730:	6820      	ldr	r0, [r4, #0]
 8000732:	f7ff ff4a 	bl	80005ca <GPIO_WriteToOutputPin>
	GPIO_WriteToOutputPin(gpioControl[1].pGPIOx, gpioControl[1].GPIO_PinConfig.GPIO_PinNumber, RW);
 8000736:	463a      	mov	r2, r7
 8000738:	7c21      	ldrb	r1, [r4, #16]
 800073a:	68e0      	ldr	r0, [r4, #12]
 800073c:	f7ff ff45 	bl	80005ca <GPIO_WriteToOutputPin>
	GPIO_WriteToOutputPin(gpioControl[2].pGPIOx, gpioControl[2].GPIO_PinConfig.GPIO_PinNumber, HIGH);
 8000740:	2201      	movs	r2, #1
 8000742:	7f21      	ldrb	r1, [r4, #28]
 8000744:	69a0      	ldr	r0, [r4, #24]
 8000746:	f7ff ff40 	bl	80005ca <GPIO_WriteToOutputPin>
	for(int i = CONTROL_PIN_COUNT - 1; i >= 0; i--){ 									/*reset all control pins*/
 800074a:	2402      	movs	r4, #2
 800074c:	e00a      	b.n	8000764 <LCM1602a_Write8_Data+0x6c>
		GPIO_WriteToOutputPin(gpioControl[i].pGPIOx, gpioControl[i].GPIO_PinConfig.GPIO_PinNumber, LOW);
 800074e:	4d08      	ldr	r5, [pc, #32]	; (8000770 <LCM1602a_Write8_Data+0x78>)
 8000750:	0063      	lsls	r3, r4, #1
 8000752:	4423      	add	r3, r4
 8000754:	0098      	lsls	r0, r3, #2
 8000756:	182b      	adds	r3, r5, r0
 8000758:	2200      	movs	r2, #0
 800075a:	7919      	ldrb	r1, [r3, #4]
 800075c:	5828      	ldr	r0, [r5, r0]
 800075e:	f7ff ff34 	bl	80005ca <GPIO_WriteToOutputPin>
	for(int i = CONTROL_PIN_COUNT - 1; i >= 0; i--){ 									/*reset all control pins*/
 8000762:	3c01      	subs	r4, #1
 8000764:	2c00      	cmp	r4, #0
 8000766:	daf2      	bge.n	800074e <LCM1602a_Write8_Data+0x56>
}
 8000768:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800076c:	20000040 	.word	0x20000040
 8000770:	2000001c 	.word	0x2000001c

08000774 <LCM1602a_Write8_Message>:
void LCM1602a_Write8_Message(char *Message){
 8000774:	b570      	push	{r4, r5, r6, lr}
 8000776:	4605      	mov	r5, r0
	uint16_t Len = (uint16_t)strlen(Message);											/*find length of the message*/
 8000778:	f7ff fd36 	bl	80001e8 <strlen>
 800077c:	4606      	mov	r6, r0
	for(int i = 0; i < Len; i++){														/*write message to display*/
 800077e:	2400      	movs	r4, #0
 8000780:	e006      	b.n	8000790 <LCM1602a_Write8_Message+0x1c>
		LCM1602a_Write8_Data((int)*Message, 1, 0);
 8000782:	2200      	movs	r2, #0
 8000784:	2101      	movs	r1, #1
 8000786:	f815 0b01 	ldrb.w	r0, [r5], #1
 800078a:	f7ff ffb5 	bl	80006f8 <LCM1602a_Write8_Data>
	for(int i = 0; i < Len; i++){														/*write message to display*/
 800078e:	3401      	adds	r4, #1
 8000790:	b2b3      	uxth	r3, r6
 8000792:	42a3      	cmp	r3, r4
 8000794:	dcf5      	bgt.n	8000782 <LCM1602a_Write8_Message+0xe>
}
 8000796:	bd70      	pop	{r4, r5, r6, pc}

08000798 <main>:
#include <stdint.h>
#include "stm32f407xx.h"
#include "stm32f407xx_lcm1602a_driver.h"

int main(void)
{
 8000798:	b500      	push	{lr}
 800079a:	b08f      	sub	sp, #60	; 0x3c
	/*Data Pins 0-7*/
	GPIO_RegDef_t *pDataPorts[8] = {GPIOE, GPIOE, GPIOE, GPIOE, GPIOE, GPIOE, GPIOE, GPIOE};
 800079c:	4e1d      	ldr	r6, [pc, #116]	; (8000814 <main+0x7c>)
 800079e:	ac06      	add	r4, sp, #24
 80007a0:	4635      	mov	r5, r6
 80007a2:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 80007a4:	c40f      	stmia	r4!, {r0, r1, r2, r3}
 80007a6:	e895 000f 	ldmia.w	r5, {r0, r1, r2, r3}
 80007aa:	e884 000f 	stmia.w	r4, {r0, r1, r2, r3}
	uint8_t	dataPins[8] = {GPIO_PIN_7,  GPIO_PIN_8,  GPIO_PIN_9,  GPIO_PIN_10,
 80007ae:	ad04      	add	r5, sp, #16
 80007b0:	f106 0320 	add.w	r3, r6, #32
 80007b4:	e893 0003 	ldmia.w	r3, {r0, r1}
 80007b8:	e885 0003 	stmia.w	r5, {r0, r1}
						   GPIO_PIN_11, GPIO_PIN_12, GPIO_PIN_13, GPIO_PIN_14};

	/*Control Pins ~ RS RW E*/
	GPIO_RegDef_t *pControlPorts[3] = {GPIOC, GPIOC, GPIOC};
 80007bc:	ac01      	add	r4, sp, #4
 80007be:	f106 0328 	add.w	r3, r6, #40	; 0x28
 80007c2:	e893 0007 	ldmia.w	r3, {r0, r1, r2}
 80007c6:	e884 0007 	stmia.w	r4, {r0, r1, r2}
	uint8_t controlPins[3] = {GPIO_PIN_1, GPIO_PIN_5, GPIO_PIN_4};
 80007ca:	6b73      	ldr	r3, [r6, #52]	; 0x34
 80007cc:	f8ad 3000 	strh.w	r3, [sp]
 80007d0:	0c1b      	lsrs	r3, r3, #16
 80007d2:	f88d 3002 	strb.w	r3, [sp, #2]

	/*enable all the GPIO ports for 8 bit transmission*/
	LCM1602a_Data8_GPIOInit(pDataPorts, dataPins, pControlPorts, controlPins);
 80007d6:	466b      	mov	r3, sp
 80007d8:	4622      	mov	r2, r4
 80007da:	4629      	mov	r1, r5
 80007dc:	a806      	add	r0, sp, #24
 80007de:	f7ff ff43 	bl	8000668 <LCM1602a_Data8_GPIOInit>

	/*Initialize the display*/
	LCM1602a_Write8_Data(0b00110000, 0, 0);
 80007e2:	2200      	movs	r2, #0
 80007e4:	4611      	mov	r1, r2
 80007e6:	2030      	movs	r0, #48	; 0x30
 80007e8:	f7ff ff86 	bl	80006f8 <LCM1602a_Write8_Data>
	LCM1602a_Write8_Data(0b00001110, 0, 0);
 80007ec:	2200      	movs	r2, #0
 80007ee:	4611      	mov	r1, r2
 80007f0:	200e      	movs	r0, #14
 80007f2:	f7ff ff81 	bl	80006f8 <LCM1602a_Write8_Data>
	LCM1602a_Write8_Data(0b00000110, 0, 0);
 80007f6:	2200      	movs	r2, #0
 80007f8:	4611      	mov	r1, r2
 80007fa:	2006      	movs	r0, #6
 80007fc:	f7ff ff7c 	bl	80006f8 <LCM1602a_Write8_Data>

	/*clear the display*/
	LCM1602a_Write8_Data(0b00000001, 0, 0);
 8000800:	2200      	movs	r2, #0
 8000802:	4611      	mov	r1, r2
 8000804:	2001      	movs	r0, #1
 8000806:	f7ff ff77 	bl	80006f8 <LCM1602a_Write8_Data>

	/*Write Message to Display*/
	LCM1602a_Write8_Message((char*)"Hello Test 2                        LOLOLOLOLOL");
 800080a:	4803      	ldr	r0, [pc, #12]	; (8000818 <main+0x80>)
 800080c:	f7ff ffb2 	bl	8000774 <LCM1602a_Write8_Message>
 8000810:	e7fe      	b.n	8000810 <main+0x78>
 8000812:	bf00      	nop
 8000814:	080008d0 	.word	0x080008d0
 8000818:	08000908 	.word	0x08000908

0800081c <Reset_Handler>:

  .section .text.Reset_Handler
  .weak Reset_Handler
  .type Reset_Handler, %function
Reset_Handler:
  ldr   r0, =_estack
 800081c:	480d      	ldr	r0, [pc, #52]	; (8000854 <LoopForever+0x2>)
  mov   sp, r0          /* set stack pointer */
 800081e:	4685      	mov	sp, r0
/* Call the clock system intitialization function.*/
  bl  SystemInit
 8000820:	f3af 8000 	nop.w

/* Copy the data segment initializers from flash to SRAM */
  ldr r0, =_sdata
 8000824:	480c      	ldr	r0, [pc, #48]	; (8000858 <LoopForever+0x6>)
  ldr r1, =_edata
 8000826:	490d      	ldr	r1, [pc, #52]	; (800085c <LoopForever+0xa>)
  ldr r2, =_sidata
 8000828:	4a0d      	ldr	r2, [pc, #52]	; (8000860 <LoopForever+0xe>)
  movs r3, #0
 800082a:	2300      	movs	r3, #0
  b LoopCopyDataInit
 800082c:	e002      	b.n	8000834 <LoopCopyDataInit>

0800082e <CopyDataInit>:

CopyDataInit:
  ldr r4, [r2, r3]
 800082e:	58d4      	ldr	r4, [r2, r3]
  str r4, [r0, r3]
 8000830:	50c4      	str	r4, [r0, r3]
  adds r3, r3, #4
 8000832:	3304      	adds	r3, #4

08000834 <LoopCopyDataInit>:

LoopCopyDataInit:
  adds r4, r0, r3
 8000834:	18c4      	adds	r4, r0, r3
  cmp r4, r1
 8000836:	428c      	cmp	r4, r1
  bcc CopyDataInit
 8000838:	d3f9      	bcc.n	800082e <CopyDataInit>

/* Zero fill the bss segment. */
  ldr r2, =_sbss
 800083a:	4a0a      	ldr	r2, [pc, #40]	; (8000864 <LoopForever+0x12>)
  ldr r4, =_ebss
 800083c:	4c0a      	ldr	r4, [pc, #40]	; (8000868 <LoopForever+0x16>)
  movs r3, #0
 800083e:	2300      	movs	r3, #0
  b LoopFillZerobss
 8000840:	e001      	b.n	8000846 <LoopFillZerobss>

08000842 <FillZerobss>:

FillZerobss:
  str  r3, [r2]
 8000842:	6013      	str	r3, [r2, #0]
  adds r2, r2, #4
 8000844:	3204      	adds	r2, #4

08000846 <LoopFillZerobss>:

LoopFillZerobss:
  cmp r2, r4
 8000846:	42a2      	cmp	r2, r4
  bcc FillZerobss
 8000848:	d3fb      	bcc.n	8000842 <FillZerobss>

/* Call static constructors */
  bl __libc_init_array
 800084a:	f000 f811 	bl	8000870 <__libc_init_array>
/* Call the application's entry point.*/
  bl main
 800084e:	f7ff ffa3 	bl	8000798 <main>

08000852 <LoopForever>:

LoopForever:
    b LoopForever
 8000852:	e7fe      	b.n	8000852 <LoopForever>
  ldr   r0, =_estack
 8000854:	20020000 	.word	0x20020000
  ldr r0, =_sdata
 8000858:	20000000 	.word	0x20000000
  ldr r1, =_edata
 800085c:	20000000 	.word	0x20000000
  ldr r2, =_sidata
 8000860:	08000940 	.word	0x08000940
  ldr r2, =_sbss
 8000864:	20000000 	.word	0x20000000
  ldr r4, =_ebss
 8000868:	200000a4 	.word	0x200000a4

0800086c <ADC_IRQHandler>:
 * @retval : None
*/
  .section .text.Default_Handler,"ax",%progbits
Default_Handler:
Infinite_Loop:
  b Infinite_Loop
 800086c:	e7fe      	b.n	800086c <ADC_IRQHandler>
	...

08000870 <__libc_init_array>:
 8000870:	b570      	push	{r4, r5, r6, lr}
 8000872:	4e0d      	ldr	r6, [pc, #52]	; (80008a8 <__libc_init_array+0x38>)
 8000874:	4c0d      	ldr	r4, [pc, #52]	; (80008ac <__libc_init_array+0x3c>)
 8000876:	1ba4      	subs	r4, r4, r6
 8000878:	10a4      	asrs	r4, r4, #2
 800087a:	2500      	movs	r5, #0
 800087c:	42a5      	cmp	r5, r4
 800087e:	d109      	bne.n	8000894 <__libc_init_array+0x24>
 8000880:	4e0b      	ldr	r6, [pc, #44]	; (80008b0 <__libc_init_array+0x40>)
 8000882:	4c0c      	ldr	r4, [pc, #48]	; (80008b4 <__libc_init_array+0x44>)
 8000884:	f000 f818 	bl	80008b8 <_init>
 8000888:	1ba4      	subs	r4, r4, r6
 800088a:	10a4      	asrs	r4, r4, #2
 800088c:	2500      	movs	r5, #0
 800088e:	42a5      	cmp	r5, r4
 8000890:	d105      	bne.n	800089e <__libc_init_array+0x2e>
 8000892:	bd70      	pop	{r4, r5, r6, pc}
 8000894:	f856 3025 	ldr.w	r3, [r6, r5, lsl #2]
 8000898:	4798      	blx	r3
 800089a:	3501      	adds	r5, #1
 800089c:	e7ee      	b.n	800087c <__libc_init_array+0xc>
 800089e:	f856 3025 	ldr.w	r3, [r6, r5, lsl #2]
 80008a2:	4798      	blx	r3
 80008a4:	3501      	adds	r5, #1
 80008a6:	e7f2      	b.n	800088e <__libc_init_array+0x1e>
 80008a8:	08000938 	.word	0x08000938
 80008ac:	08000938 	.word	0x08000938
 80008b0:	08000938 	.word	0x08000938
 80008b4:	0800093c 	.word	0x0800093c

080008b8 <_init>:
 80008b8:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80008ba:	bf00      	nop
 80008bc:	bcf8      	pop	{r3, r4, r5, r6, r7}
 80008be:	bc08      	pop	{r3}
 80008c0:	469e      	mov	lr, r3
 80008c2:	4770      	bx	lr

080008c4 <_fini>:
 80008c4:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80008c6:	bf00      	nop
 80008c8:	bcf8      	pop	{r3, r4, r5, r6, r7}
 80008ca:	bc08      	pop	{r3}
 80008cc:	469e      	mov	lr, r3
 80008ce:	4770      	bx	lr
